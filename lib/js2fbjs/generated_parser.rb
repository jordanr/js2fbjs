#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/parser.y".
#

require 'racc/parser'


  require "js2fbjs/sexp"

module Js2Fbjs

  class GeneratedParser < Racc::Parser

module_eval <<'..end lib/parser.y modeval..id00357f29fe', 'lib/parser.y', 842
  include SexpUtility
  def allow_auto_semi?(error_token)
    error_token == false || error_token == '}' || @terminator
  end

  def property_class_for(ident)
    case ident
    when 'get'
      :GetterProperty
    when 'set'
      :SetterProperty
    else
      nil
    end
  end

  def debug(*args)
    logger.debug(*args) if logger
  end

  def flatten_unless_sexp(ary)
    return ary unless ary.is_a?(Array) && !ary.is_a?(Sexp)
    flattened = []
    ary.each { |ar| 
 	sub = flatten_unless_sexp(ar)
	if(sub.is_a?(Array) && !sub.is_a?(Sexp) )
	  flattened += sub
	else
	  flattened.push(sub)
	end
    }    
    flattened
  end

  def combine(sym, array_or_sexp)
    if(!array_or_sexp.is_a?(Array))
	raise ParseError, "tried to make an s-expression with a non array"
    elsif(array_or_sexp.is_a?(Sexp))
	s(sym, array_or_sexp)
    else
        Sexp.from_array([sym]+array_or_sexp)
    end
  end
..end lib/parser.y modeval..id00357f29fe

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 0, 89, :_reduce_1,
 1, 89, :_reduce_2,
 1, 90, :_reduce_none,
 2, 90, :_reduce_4,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 110, :_reduce_23,
 1, 110, :_reduce_24,
 1, 110, :_reduce_25,
 1, 110, :_reduce_26,
 1, 110, :_reduce_27,
 1, 110, :_reduce_28,
 3, 111, :_reduce_29,
 3, 111, :_reduce_30,
 3, 111, :_reduce_31,
 7, 111, :_reduce_32,
 8, 111, :_reduce_33,
 1, 115, :_reduce_34,
 3, 115, :_reduce_35,
 1, 116, :_reduce_none,
 2, 116, :_reduce_37,
 3, 116, :_reduce_38,
 4, 116, :_reduce_39,
 1, 117, :_reduce_40,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 1, 117, :_reduce_43,
 3, 117, :_reduce_44,
 3, 118, :_reduce_45,
 3, 118, :_reduce_46,
 5, 118, :_reduce_47,
 2, 121, :_reduce_48,
 4, 121, :_reduce_49,
 0, 120, :_reduce_50,
 1, 120, :_reduce_none,
 1, 122, :_reduce_52,
 2, 122, :_reduce_53,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 4, 123, :_reduce_56,
 3, 123, :_reduce_57,
 3, 123, :_reduce_58,
 1, 126, :_reduce_none,
 4, 126, :_reduce_60,
 3, 126, :_reduce_61,
 3, 126, :_reduce_62,
 1, 127, :_reduce_none,
 2, 127, :_reduce_64,
 1, 128, :_reduce_none,
 2, 128, :_reduce_66,
 2, 129, :_reduce_67,
 2, 129, :_reduce_68,
 4, 129, :_reduce_69,
 3, 129, :_reduce_70,
 2, 130, :_reduce_71,
 2, 130, :_reduce_72,
 4, 130, :_reduce_73,
 3, 130, :_reduce_74,
 2, 125, :_reduce_75,
 3, 125, :_reduce_76,
 1, 131, :_reduce_77,
 3, 131, :_reduce_78,
 1, 132, :_reduce_none,
 1, 132, :_reduce_none,
 1, 133, :_reduce_none,
 1, 133, :_reduce_none,
 1, 134, :_reduce_none,
 2, 134, :_reduce_84,
 2, 134, :_reduce_85,
 1, 135, :_reduce_none,
 2, 135, :_reduce_87,
 2, 135, :_reduce_88,
 2, 136, :_reduce_89,
 2, 136, :_reduce_90,
 2, 136, :_reduce_91,
 2, 136, :_reduce_92,
 2, 136, :_reduce_93,
 2, 136, :_reduce_94,
 2, 136, :_reduce_95,
 2, 136, :_reduce_96,
 2, 136, :_reduce_97,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 138, :_reduce_none,
 1, 138, :_reduce_none,
 1, 139, :_reduce_none,
 3, 139, :_reduce_103,
 3, 139, :_reduce_104,
 3, 139, :_reduce_105,
 1, 140, :_reduce_none,
 3, 140, :_reduce_107,
 3, 140, :_reduce_108,
 3, 140, :_reduce_109,
 1, 141, :_reduce_none,
 3, 141, :_reduce_111,
 3, 141, :_reduce_112,
 1, 142, :_reduce_none,
 3, 142, :_reduce_114,
 3, 142, :_reduce_115,
 1, 143, :_reduce_none,
 3, 143, :_reduce_117,
 3, 143, :_reduce_118,
 3, 143, :_reduce_119,
 1, 144, :_reduce_none,
 3, 144, :_reduce_121,
 3, 144, :_reduce_122,
 3, 144, :_reduce_123,
 1, 145, :_reduce_none,
 3, 145, :_reduce_125,
 3, 145, :_reduce_126,
 3, 145, :_reduce_127,
 3, 145, :_reduce_128,
 3, 145, :_reduce_129,
 3, 145, :_reduce_130,
 1, 146, :_reduce_none,
 3, 146, :_reduce_132,
 3, 146, :_reduce_133,
 3, 146, :_reduce_134,
 3, 146, :_reduce_135,
 3, 146, :_reduce_136,
 1, 147, :_reduce_none,
 3, 147, :_reduce_138,
 3, 147, :_reduce_139,
 3, 147, :_reduce_140,
 3, 147, :_reduce_141,
 3, 147, :_reduce_142,
 3, 147, :_reduce_143,
 1, 148, :_reduce_none,
 3, 148, :_reduce_145,
 3, 148, :_reduce_146,
 3, 148, :_reduce_147,
 3, 148, :_reduce_148,
 1, 149, :_reduce_none,
 3, 149, :_reduce_150,
 3, 149, :_reduce_151,
 3, 149, :_reduce_152,
 3, 149, :_reduce_153,
 1, 150, :_reduce_none,
 3, 150, :_reduce_155,
 3, 150, :_reduce_156,
 3, 150, :_reduce_157,
 3, 150, :_reduce_158,
 1, 151, :_reduce_none,
 3, 151, :_reduce_160,
 1, 152, :_reduce_none,
 3, 152, :_reduce_162,
 1, 153, :_reduce_none,
 3, 153, :_reduce_164,
 1, 154, :_reduce_none,
 3, 154, :_reduce_166,
 1, 155, :_reduce_none,
 3, 155, :_reduce_168,
 1, 156, :_reduce_none,
 3, 156, :_reduce_170,
 1, 157, :_reduce_none,
 3, 157, :_reduce_172,
 1, 158, :_reduce_none,
 3, 158, :_reduce_174,
 1, 159, :_reduce_none,
 3, 159, :_reduce_176,
 1, 160, :_reduce_none,
 3, 160, :_reduce_178,
 1, 161, :_reduce_none,
 3, 161, :_reduce_180,
 1, 162, :_reduce_none,
 3, 162, :_reduce_182,
 1, 163, :_reduce_none,
 3, 163, :_reduce_184,
 1, 164, :_reduce_none,
 3, 164, :_reduce_186,
 1, 165, :_reduce_none,
 3, 165, :_reduce_188,
 1, 166, :_reduce_none,
 5, 166, :_reduce_190,
 1, 167, :_reduce_none,
 5, 167, :_reduce_192,
 1, 169, :_reduce_none,
 5, 169, :_reduce_194,
 1, 112, :_reduce_none,
 3, 112, :_reduce_196,
 1, 168, :_reduce_none,
 3, 168, :_reduce_198,
 1, 171, :_reduce_none,
 3, 171, :_reduce_200,
 1, 170, :_reduce_201,
 1, 170, :_reduce_202,
 1, 170, :_reduce_203,
 1, 170, :_reduce_204,
 1, 170, :_reduce_205,
 1, 170, :_reduce_206,
 1, 170, :_reduce_207,
 1, 170, :_reduce_208,
 1, 170, :_reduce_209,
 1, 170, :_reduce_210,
 1, 170, :_reduce_211,
 1, 170, :_reduce_212,
 1, 119, :_reduce_none,
 3, 119, :_reduce_214,
 1, 172, :_reduce_none,
 3, 172, :_reduce_216,
 1, 173, :_reduce_none,
 3, 173, :_reduce_218,
 3, 94, :_reduce_219,
 3, 95, :_reduce_220,
 3, 95, :_reduce_221,
 1, 174, :_reduce_222,
 3, 174, :_reduce_223,
 1, 176, :_reduce_224,
 3, 176, :_reduce_225,
 1, 175, :_reduce_226,
 2, 175, :_reduce_227,
 1, 177, :_reduce_228,
 2, 177, :_reduce_229,
 3, 96, :_reduce_230,
 3, 96, :_reduce_231,
 1, 180, :_reduce_232,
 3, 180, :_reduce_233,
 1, 181, :_reduce_234,
 2, 181, :_reduce_235,
 2, 178, :_reduce_236,
 2, 179, :_reduce_237,
 1, 97, :_reduce_238,
 2, 98, :_reduce_239,
 2, 98, :_reduce_240,
 5, 99, :_reduce_241,
 7, 99, :_reduce_242,
 7, 100, :_reduce_243,
 7, 100, :_reduce_244,
 5, 100, :_reduce_245,
 9, 100, :_reduce_246,
 10, 100, :_reduce_247,
 7, 100, :_reduce_248,
 8, 100, :_reduce_249,
 9, 100, :_reduce_250,
 0, 183, :_reduce_251,
 1, 183, :_reduce_none,
 0, 182, :_reduce_253,
 1, 182, :_reduce_none,
 2, 101, :_reduce_255,
 2, 101, :_reduce_256,
 3, 101, :_reduce_257,
 3, 101, :_reduce_258,
 2, 102, :_reduce_259,
 2, 102, :_reduce_260,
 3, 102, :_reduce_261,
 3, 102, :_reduce_262,
 2, 103, :_reduce_263,
 2, 103, :_reduce_264,
 3, 103, :_reduce_265,
 3, 103, :_reduce_266,
 5, 104, :_reduce_267,
 5, 105, :_reduce_268,
 3, 184, :_reduce_269,
 5, 184, :_reduce_270,
 0, 185, :_reduce_271,
 1, 185, :_reduce_none,
 1, 187, :_reduce_273,
 2, 187, :_reduce_274,
 4, 188, :_reduce_275,
 3, 186, :_reduce_276,
 3, 106, :_reduce_277,
 3, 107, :_reduce_278,
 3, 107, :_reduce_279,
 4, 108, :_reduce_280,
 7, 108, :_reduce_281,
 9, 108, :_reduce_282,
 2, 109, :_reduce_283,
 2, 109, :_reduce_284,
 7, 92, :_reduce_285,
 8, 92, :_reduce_286,
 6, 124, :_reduce_287,
 7, 124, :_reduce_288,
 7, 124, :_reduce_289,
 8, 124, :_reduce_290,
 1, 114, :_reduce_291,
 3, 114, :_reduce_292,
 1, 113, :_reduce_293 ]

racc_reduce_n = 294

racc_shift_n = 541

clist = [
'113,249,258,260,268,274,280,159,153,388,455,407,183,504,140,452,252',
'211,212,214,267,476,500,218,211,212,214,415,219,266,205,206,426,453',
'210,99,100,101,102,104,105,106,108,111,97,98,174,189,190,174,520,216',
'425,217,192,250,194,408,184,336,237,238,253,337,186,188,244,154,114',
'250,239,250,269,141,281,109,456,234,236,501,240,241,242,243,237,238',
'115,251,259,261,270,275,282,160,155,123,14,20,25,505,142,234,236,250',
'174,379,58,185,187,216,463,217,94,423,228,330,84,394,250,32,233,235',
'44,343,52,237,238,156,157,409,237,238,174,391,393,16,23,216,273,217',
'343,250,234,236,233,235,341,234,236,394,174,5,9,12,91,220,343,222,248',
'40,511,85,419,250,62,391,393,72,75,80,2,421,14,20,25,29,390,392,39,42',
'46,136,58,60,416,233,235,74,161,1,233,235,21,22,28,32,34,38,44,48,52',
'55,59,231,229,230,237,238,390,392,174,16,23,343,250,172,424,173,250',
'465,386,237,238,234,236,394,406,5,9,12,18,240,241,242,243,40,394,50',
'234,236,62,391,393,72,75,80,2,405,14,20,25,29,391,393,39,42,46,51,58',
'60,245,246,247,74,79,1,233,235,21,22,28,32,34,38,44,48,52,55,59,404',
'493,233,235,423,390,392,403,16,23,397,398,399,400,254,255,390,392,237',
'238,372,237,238,250,5,9,12,18,397,398,399,400,40,394,50,234,236,62,234',
'236,72,75,80,2,462,14,20,25,29,391,393,39,42,46,51,58,60,231,229,230',
'74,79,1,254,255,21,22,28,32,34,38,44,48,52,55,59,396,526,233,235,250',
'233,235,464,16,23,198,199,200,201,254,255,390,392,237,238,240,241,242',
'243,5,9,12,18,480,395,468,250,40,423,50,234,236,62,205,206,72,75,80',
'2,467,14,20,25,29,254,255,39,42,46,51,58,60,169,167,168,74,79,1,254',
'255,21,22,28,32,34,38,44,48,52,55,59,389,422,233,235,423,205,206,385',
'16,23,99,100,101,102,104,105,106,108,111,97,98,231,229,230,5,9,12,18',
'479,471,382,250,40,250,50,380,378,62,381,250,72,75,80,2,472,14,20,25',
'29,244,109,39,42,46,51,58,60,231,229,230,74,79,1,254,255,21,22,28,32',
'34,38,44,48,52,55,59,231,229,230,334,335,205,206,476,16,23,99,100,101',
'102,104,105,106,108,111,97,98,231,229,230,5,9,12,18,231,229,230,295',
'40,296,50,478,250,62,418,180,72,75,80,2,162,14,20,25,29,162,109,39,42',
'46,51,58,60,231,229,230,74,406,1,254,255,21,22,28,32,34,38,44,48,52',
'55,59,231,229,230,239,150,107,110,374,16,23,99,100,101,102,104,105,106',
'108,111,97,98,231,229,230,5,9,12,18,231,229,230,50,40,228,50,389,481',
'62,250,248,72,75,80,2,345,14,20,25,29,340,109,39,42,46,51,58,60,231',
'229,230,74,79,1,339,483,21,22,28,32,34,38,44,48,52,55,59,231,229,230',
'231,229,230,333,485,16,23,245,246,247,231,229,230,245,246,247,144,145',
'146,332,329,5,9,12,18,245,246,247,395,40,310,50,405,488,62,150,490,72',
'75,80,2,50,14,20,25,29,492,300,39,42,46,51,58,60,245,246,247,74,79,1',
'147,495,21,22,28,32,34,38,44,48,52,55,59,231,229,230,231,229,230,496',
'297,16,23,231,229,230,231,229,230,428,294,289,50,283,139,272,456,5,9',
'12,18,509,272,170,176,40,513,50,138,248,62,516,517,72,75,80,2,244,14',
'20,25,29,519,239,39,42,46,51,58,60,521,476,523,74,79,1,524,228,21,22',
'28,32,34,38,44,48,52,55,59,180,117,528,529,202,531,112,196,16,23,534',
'50,182,537,82,539,383,,,,,,,,5,9,12,18,,,,,40,,50,,,62,,,72,75,80,2',
',14,20,25,29,,,39,42,46,51,58,60,,,,74,,1,,,21,22,28,32,34,38,44,48',
'52,55,59,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,18,,,,,40,,50,,,62,,,72',
'75,80,2,,14,20,25,29,,,39,42,46,51,58,60,,,,74,,1,,,21,22,28,32,34,38',
'44,48,52,55,59,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,18,,,,,40,,50,,,62',
',,72,75,80,2,,14,20,25,29,,,39,42,46,51,58,60,,,,74,,1,,,21,22,28,32',
'34,38,44,48,52,55,59,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,18,,,,,40,,50',
',,62,,,72,75,80,2,,14,20,25,29,,,39,42,46,51,58,60,,,,74,,1,,,21,22',
'28,32,34,38,44,48,52,55,59,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,18,,,',
',40,,50,,,62,,,72,75,80,2,,14,20,25,29,,,39,42,46,51,58,60,,,,74,79',
'1,,,21,22,28,32,34,38,44,48,52,55,59,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9',
'12,18,,,,,40,,50,,,62,,,72,75,80,2,,14,20,25,29,,,39,42,46,51,58,60',
',,,74,79,1,,,21,22,28,32,34,38,44,48,52,55,59,,,,,,,,,16,23,,,,,,,,',
',,,,,,5,9,12,18,,,,,40,,50,,,62,,,72,75,80,2,,14,20,25,29,,,39,42,46',
'51,58,60,,,,74,79,1,,,21,22,28,32,34,38,44,48,52,55,59,,,,,,,,,16,23',
',,,,,,,,,,,,,,5,9,12,18,,,,,40,,50,,,62,,,72,75,80,2,,14,20,25,29,,',
'39,42,46,51,58,60,,,,74,79,1,,,21,22,28,32,34,38,44,48,52,55,59,,,,',
',,,,16,23,,,,,,,,,,,,,,,5,9,12,18,,,,,40,,50,,,62,,,72,75,80,2,,14,20',
'25,29,,,39,42,46,51,58,60,,,,74,79,1,,,21,22,28,32,34,38,44,48,52,55',
'59,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,18,,,,,40,,50,,,62,,,72,75,80',
'2,,14,20,25,29,,,39,42,46,51,58,60,,,,74,79,1,,,21,22,28,32,34,38,44',
'48,52,55,59,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,18,,,,,40,,50,,,62,,',
'72,75,80,2,,14,20,25,29,,,39,42,46,51,58,60,,,,74,,1,,,21,22,28,32,34',
'38,44,48,52,55,59,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,18,,,,,40,,50,',
',62,,,72,75,80,2,,14,20,25,29,,,39,42,46,51,58,60,,,,74,,1,,,21,22,28',
'32,34,38,44,48,52,55,59,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,18,,,,,40',
',50,,,62,,,72,75,80,2,,14,20,25,29,,,39,42,46,51,58,60,,,,74,,1,,,21',
'22,28,32,34,38,44,48,52,55,59,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,18',
',,,,40,,50,,,62,,,72,75,80,2,,14,20,25,29,,,39,42,46,51,58,60,,,,74',
',1,,,21,22,28,32,34,38,44,48,52,55,59,,,,,,,,,16,23,,,,,,,,,,,,,,,5',
'9,12,18,,,,,40,,50,,,62,,,72,75,80,2,,14,20,25,29,,,39,42,46,51,58,60',
',,,74,,1,,,21,22,28,32,34,38,44,48,52,55,59,,,,,,,,,16,23,,,,,,,,,,',
',,,,5,9,12,18,,14,20,25,40,,50,,,62,,58,72,75,80,2,,94,,,,84,,,32,,51',
'44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62',
'58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,',
'5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52',
',,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72',
'75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12',
'91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,',
',,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80',
'2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14',
'20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16',
'23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,',
',,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25',
',40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,',
',,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84',
',,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,',
'85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,',
',,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32',
',,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,',
'62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,',
',,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44',
',52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58',
',72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9',
'12,91,,14,20,25,40,,85,,,62,434,58,72,75,80,2,,94,,,,84,,,32,,,44,,52',
',,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72',
'75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12',
'91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,',
',,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80',
'2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14',
'20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16',
'23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,',
',,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25',
',40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,',
',,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84',
',,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,',
'85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,',
',,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32',
',,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,',
'62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,',
',,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44',
',52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58',
',72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9',
'12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,',
',,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75',
'80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91',
'14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,',
',,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2',
'94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20',
'25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23',
',,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84',
',,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,',
'85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,',
',,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32',
',,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,',
'62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,',
',,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44',
',52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58',
',72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9',
'12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,',
',,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75',
'80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91',
'14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,',
',,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2',
'94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20',
'25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23',
',,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84',
',,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,',
'85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,',
',,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32',
',,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,',
'62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,',
',,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44',
',52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58',
',72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9',
'12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,',
',,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75',
'80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91',
'14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,',
',,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2',
'94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20',
'25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23',
',,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84',
',,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,',
'85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,',
',,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32',
',,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,',
'62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,',
',,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44',
',52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,290,85,,,62',
'58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,',
'5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52',
',,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72',
'75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12',
'91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,',
',,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80',
'2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,,14',
'20,25,40,,85,,,62,299,58,72,75,80,2,,94,,,,84,,,32,,,44,,52,,,,,,,,',
',,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2',
'94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20',
'25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23',
',,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84',
',,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,',
'85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,',
',,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32',
',,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,',
'62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,',
',,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44',
',52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58',
',72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9',
'12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,',
',,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75',
'80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91',
'14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,320,52,,,,,',
',,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80',
'2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14',
'20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16',
'23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,',
',,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25',
',40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,',
',,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84',
',,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,',
'85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,',
',,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32',
',,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,',
'62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,',
',,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44',
',52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58',
',72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9',
'12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,',
',,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75',
'80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91',
'14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,',
',,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2',
'94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20',
'25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23',
',,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84',
',,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,',
'85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,',
',,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32',
',,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,',
'62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,',
',,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44',
',52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58',
',72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9',
'12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,',
',,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75',
'80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91',
'14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,',
',,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2',
'94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20',
'25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23',
',,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84',
',,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,',
'85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,',
',,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32',
',,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,',
'62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,',
',,,5,9,12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44',
',52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9,12,91,14,20,25,,40,,85,,,62,58',
',72,75,80,2,94,,,,84,,,32,,,44,,52,,,,,,,,,,,16,23,,,,,,,,,,,,,,,5,9',
'12,91,14,20,25,,40,,85,,,62,58,,72,75,80,2,94,,,,84,,,32,,,44,,52,14',
'20,25,,,,,,,,16,23,,,,,94,14,20,25,84,,,32,,,5,9,12,91,,,,94,40,,85',
'84,,62,32,,72,75,80,2,,,,,,,,,,5,9,12,91,,,,,40,,85,,,62,,,,5,9,12,91',
',,,,40,,85,,,62' ]
racc_action_table = arr = Array.new(8528, nil)
str = a = i = nil
idx = 0
clist.each do |str|
  str.split(',', -1).each do |i|
    arr[idx] = i.to_i unless i.empty?
    idx += 1
  end
end

clist = [
'11,133,141,143,149,154,163,46,42,312,403,324,64,479,29,401,134,335,335',
'335,148,474,477,94,85,85,85,335,94,148,312,312,372,401,85,312,312,312',
'312,312,312,312,312,312,312,312,118,67,67,71,499,118,369,118,71,499',
'71,324,64,214,325,325,134,214,67,67,368,42,11,133,362,143,149,29,163',
'312,403,325,325,477,128,128,128,128,359,359,11,133,141,143,149,154,163',
'46,42,22,22,22,22,479,29,359,359,288,87,288,22,67,67,87,410,87,22,410',
'357,204,22,448,204,22,325,325,22,329,22,326,326,43,43,329,327,327,207',
'448,448,22,22,207,152,207,219,152,326,326,359,359,219,327,327,451,96',
'22,22,22,22,96,340,96,346,22,486,22,340,486,22,451,451,22,22,22,22,341',
'464,464,464,464,448,448,464,464,464,22,464,464,336,326,326,464,47,464',
'327,327,464,464,464,464,464,464,464,464,464,464,464,121,121,121,126',
'126,451,451,57,464,464,416,344,57,344,57,309,416,309,361,361,126,126',
'450,323,464,464,464,464,224,224,224,224,464,449,464,361,361,464,450',
'450,464,464,464,464,322,490,490,490,490,449,449,490,490,490,464,490',
'490,131,131,131,490,490,490,126,126,490,490,490,490,490,490,490,490',
'490,490,490,321,466,361,361,466,450,450,320,490,490,319,319,319,319',
'284,284,449,449,358,358,257,360,360,257,490,490,490,490,459,459,459',
'459,490,316,490,358,358,490,360,360,490,490,490,490,409,492,492,492',
'492,316,316,492,492,492,490,492,492,311,311,311,492,492,492,285,285',
'492,492,492,492,492,492,492,492,492,492,492,318,510,358,358,510,360',
'360,411,492,492,76,76,76,76,349,349,316,316,328,328,366,366,366,366',
'492,492,492,492,438,317,420,438,492,420,492,328,328,492,83,83,492,492',
'492,492,419,471,471,471,471,348,348,471,471,471,492,471,471,54,54,54',
'471,471,471,347,347,471,471,471,471,471,471,471,471,471,471,471,313',
'342,328,328,342,436,436,302,471,471,436,436,436,436,436,436,436,436',
'436,436,436,308,308,308,471,471,471,471,432,422,293,432,471,293,471',
'292,287,471,292,287,471,471,471,471,423,467,467,467,467,301,436,467',
'467,467,471,467,467,307,307,307,467,467,467,286,286,467,467,467,467',
'467,467,467,467,467,467,467,351,351,351,213,213,122,122,426,467,467',
'122,122,122,122,122,122,122,122,122,122,122,352,352,352,467,467,467',
'467,353,353,353,178,467,178,467,428,338,467,338,295,467,467,467,467',
'48,480,480,480,480,281,122,480,480,480,467,480,480,354,354,354,480,439',
'480,135,135,480,480,480,480,480,480,480,480,480,480,480,355,355,355',
'278,269,6,6,267,480,480,6,6,6,6,6,6,6,6,6,6,6,356,356,356,480,480,480',
'480,306,306,306,266,480,265,480,445,446,480,447,256,480,480,480,480',
'222,462,462,462,462,218,6,462,462,462,480,462,462,444,444,444,462,462',
'462,217,452,462,462,462,462,462,462,462,462,462,462,462,303,303,303',
'440,440,440,212,454,462,462,277,277,277,443,443,443,276,276,276,35,35',
'35,211,202,462,462,462,462,370,370,370,458,462,194,462,460,461,462,39',
'463,462,462,462,462,38,421,421,421,421,465,182,421,421,421,462,421,421',
'371,371,371,421,421,421,36,468,421,421,421,421,421,421,421,421,421,421',
'421,441,441,441,305,305,305,470,179,421,421,442,442,442,304,304,304',
'374,177,173,478,165,28,162,483,421,421,421,421,484,150,55,59,421,489',
'421,26,132,421,493,494,421,421,421,421,130,495,495,495,495,497,127,495',
'495,495,421,495,495,500,502,503,495,495,495,507,120,495,495,495,495',
'495,495,495,495,495,495,495,62,18,514,515,79,518,7,74,495,495,522,523',
'63,525,1,530,294,,,,,,,,495,495,495,495,,,,,495,,495,,,495,,,495,495',
'495,495,,382,382,382,382,,,382,382,382,495,382,382,,,,382,,382,,,382',
'382,382,382,382,382,382,382,382,382,382,,,,,,,,,382,382,,,,,,,,,,,,',
',,382,382,382,382,,,,,382,,382,,,382,,,382,382,382,382,,378,378,378',
'378,,,378,378,378,382,378,378,,,,378,,378,,,378,378,378,378,378,378',
'378,378,378,378,378,,,,,,,,,378,378,,,,,,,,,,,,,,,378,378,378,378,,',
',,378,,378,,,378,,,378,378,378,378,,511,511,511,511,,,511,511,511,378',
'511,511,,,,511,,511,,,511,511,511,511,511,511,511,511,511,511,511,,',
',,,,,,511,511,,,,,,,,,,,,,,,511,511,511,511,,,,,511,,511,,,511,,,511',
'511,511,511,,330,330,330,330,,,330,330,330,511,330,330,,,,330,,330,',
',330,330,330,330,330,330,330,330,330,330,330,,,,,,,,,330,330,,,,,,,',
',,,,,,,330,330,330,330,,,,,330,,330,,,330,,,330,330,330,330,,68,68,68',
'68,,,68,68,68,330,68,68,,,,68,68,68,,,68,68,68,68,68,68,68,68,68,68',
'68,,,,,,,,,68,68,,,,,,,,,,,,,,,68,68,68,68,,,,,68,,68,,,68,,,68,68,68',
'68,,50,50,50,50,,,50,50,50,68,50,50,,,,50,50,50,,,50,50,50,50,50,50',
'50,50,50,50,50,,,,,,,,,50,50,,,,,,,,,,,,,,,50,50,50,50,,,,,50,,50,,',
'50,,,50,50,50,50,,516,516,516,516,,,516,516,516,50,516,516,,,,516,516',
'516,,,516,516,516,516,516,516,516,516,516,516,516,,,,,,,,,516,516,,',
',,,,,,,,,,,,516,516,516,516,,,,,516,,516,,,516,,,516,516,516,516,,0',
'0,0,0,,,0,0,0,516,0,0,,,,0,0,0,,,0,0,0,0,0,0,0,0,0,0,0,,,,,,,,,0,0,',
',,,,,,,,,,,,,0,0,0,0,,,,,0,,0,,,0,,,0,0,0,0,,520,520,520,520,,,520,520',
'520,0,520,520,,,,520,520,520,,,520,520,520,520,520,520,520,520,520,520',
'520,,,,,,,,,520,520,,,,,,,,,,,,,,,520,520,520,520,,,,,520,,520,,,520',
',,520,520,520,520,,521,521,521,521,,,521,521,521,520,521,521,,,,521',
'521,521,,,521,521,521,521,521,521,521,521,521,521,521,,,,,,,,,521,521',
',,,,,,,,,,,,,,521,521,521,521,,,,,521,,521,,,521,,,521,521,521,521,',
'524,524,524,524,,,524,524,524,521,524,524,,,,524,,524,,,524,524,524',
'524,524,524,524,524,524,524,524,,,,,,,,,524,524,,,,,,,,,,,,,,,524,524',
'524,524,,,,,524,,524,,,524,,,524,524,524,524,,526,526,526,526,,,526',
'526,526,524,526,526,,,,526,,526,,,526,526,526,526,526,526,526,526,526',
'526,526,,,,,,,,,526,526,,,,,,,,,,,,,,,526,526,526,526,,,,,526,,526,',
',526,,,526,526,526,526,,60,60,60,60,,,60,60,60,526,60,60,,,,60,,60,',
',60,60,60,60,60,60,60,60,60,60,60,,,,,,,,,60,60,,,,,,,,,,,,,,,60,60',
'60,60,,,,,60,,60,,,60,,,60,60,60,60,,117,117,117,117,,,117,117,117,60',
'117,117,,,,117,,117,,,117,117,117,117,117,117,117,117,117,117,117,,',
',,,,,,117,117,,,,,,,,,,,,,,,117,117,117,117,,,,,117,,117,,,117,,,117',
'117,117,117,,537,537,537,537,,,537,537,537,117,537,537,,,,537,,537,',
',537,537,537,537,537,537,537,537,537,537,537,,,,,,,,,537,537,,,,,,,',
',,,,,,,537,537,537,537,,393,393,393,537,,537,,,537,,393,537,537,537',
'537,,393,,,,393,,,393,,537,393,,393,,,,,,,,,,,393,393,,,,,,,,,,,,,,',
'393,393,393,393,392,392,392,,393,,393,,,393,392,,393,393,393,393,392',
',,,392,,,392,,,392,,392,,,,,,,,,,,392,392,,,,,,,,,,,,,,,392,392,392',
'392,2,2,2,,392,,392,,,392,2,,392,392,392,392,2,,,,2,,,2,,,2,,2,,,,,',
',,,,,2,2,,,,,,,,,,,,,,,2,2,2,2,391,391,391,,2,,2,,,2,391,,2,2,2,2,391',
',,,391,,,391,,,391,,391,,,,,,,,,,,391,391,,,,,,,,,,,,,,,391,391,391',
'391,72,72,72,,391,,391,,,391,72,,391,391,391,391,72,,,,72,,,72,,,72',
',72,,,,,,,,,,,72,72,,,,,,,,,,,,,,,72,72,72,72,390,390,390,,72,,72,,',
'72,390,,72,72,72,72,390,,,,390,,,390,,,390,,390,,,,,,,,,,,390,390,,',
',,,,,,,,,,,,390,390,390,390,75,75,75,,390,,390,,,390,75,,390,390,390',
'390,75,,,,75,,,75,,,75,,75,,,,,,,,,,,75,75,,,,,,,,,,,,,,,75,75,75,75',
'389,389,389,,75,,75,,,75,389,,75,75,75,75,389,,,,389,,,389,,,389,,389',
',,,,,,,,,,389,389,,,,,,,,,,,,,,,389,389,389,389,16,16,16,,389,,389,',
',389,16,,389,389,389,389,16,,,,16,,,16,,,16,,16,,,,,,,,,,,16,16,,,,',
',,,,,,,,,,16,16,16,16,80,80,80,,16,,16,,,16,80,,16,16,16,16,80,,,,80',
',,80,,,80,,80,,,,,,,,,,,80,80,,,,,,,,,,,,,,,80,80,80,80,82,82,82,,80',
',80,,,80,82,,80,80,80,80,82,,,,82,,,82,,,82,,82,,,,,,,,,,,82,82,,,,',
',,,,,,,,,,82,82,82,82,388,388,388,,82,,82,,,82,388,,82,82,82,82,388',
',,,388,,,388,,,388,,388,,,,,,,,,,,388,388,,,,,,,,,,,,,,,388,388,388',
'388,387,387,387,,388,,388,,,388,387,,388,388,388,388,387,,,,387,,,387',
',,387,,387,,,,,,,,,,,387,387,,,,,,,,,,,,,,,387,387,387,387,385,385,385',
',387,,387,,,387,385,,387,387,387,387,385,,,,385,,,385,,,385,,385,,,',
',,,,,,,385,385,,,,,,,,,,,,,,,385,385,385,385,384,384,384,,385,,385,',
',385,384,,385,385,385,385,384,,,,384,,,384,,,384,,384,,,,,,,,,,,384',
'384,,,,,,,,,,,,,,,384,384,384,384,,383,383,383,384,,384,,,384,384,383',
'384,384,384,384,,383,,,,383,,,383,,,383,,383,,,,,,,,,,,383,383,,,,,',
',,,,,,,,,383,383,383,383,381,381,381,,383,,383,,,383,381,,383,383,383',
'383,381,,,,381,,,381,,,381,,381,,,,,,,,,,,381,381,,,,,,,,,,,,,,,381',
'381,381,381,103,103,103,,381,,381,,,381,103,,381,381,381,381,103,,,',
'103,,,103,,,103,,103,,,,,,,,,,,103,103,,,,,,,,,,,,,,,103,103,103,103',
'112,112,112,,103,,103,,,103,112,,103,103,103,103,112,,,,112,,,112,,',
'112,,112,,,,,,,,,,,112,112,,,,,,,,,,,,,,,112,112,112,112,114,114,114',
',112,,112,,,112,114,,112,112,112,112,114,,,,114,,,114,,,114,,114,,,',
',,,,,,,114,114,,,,,,,,,,,,,,,114,114,114,114,44,44,44,,114,,114,,,114',
'44,,114,114,114,114,44,,,,44,,,44,,,44,,44,,,,,,,,,,,44,44,,,,,,,,,',
',,,,,44,44,44,44,394,394,394,,44,,44,,,44,394,,44,44,44,44,394,,,,394',
',,394,,,394,,394,,,,,,,,,,,394,394,,,,,,,,,,,,,,,394,394,394,394,509',
'509,509,,394,,394,,,394,509,,394,394,394,394,509,,,,509,,,509,,,509',
',509,,,,,,,,,,,509,509,,,,,,,,,,,,,,,509,509,509,509,395,395,395,,509',
',509,,,509,395,,509,509,509,509,395,,,,395,,,395,,,395,,395,,,,,,,,',
',,395,395,,,,,,,,,,,,,,,395,395,395,395,396,396,396,,395,,395,,,395',
'396,,395,395,395,395,396,,,,396,,,396,,,396,,396,,,,,,,,,,,396,396,',
',,,,,,,,,,,,,396,396,396,396,397,397,397,,396,,396,,,396,397,,396,396',
'396,396,397,,,,397,,,397,,,397,,397,,,,,,,,,,,397,397,,,,,,,,,,,,,,',
'397,397,397,397,398,398,398,,397,,397,,,397,398,,397,397,397,397,398',
',,,398,,,398,,,398,,398,,,,,,,,,,,398,398,,,,,,,,,,,,,,,398,398,398',
'398,399,399,399,,398,,398,,,398,399,,398,398,398,398,399,,,,399,,,399',
',,399,,399,,,,,,,,,,,399,399,,,,,,,,,,,,,,,399,399,399,399,400,400,400',
',399,,399,,,399,400,,399,399,399,399,400,,,,400,,,400,,,400,,400,,,',
',,,,,,,400,400,,,,,,,,,,,,,,,400,400,400,400,337,337,337,,400,,400,',
',400,337,,400,400,400,400,337,,,,337,,,337,,,337,,337,,,,,,,,,,,337',
'337,,,,,,,,,,,,,,,337,337,337,337,23,23,23,,337,,337,,,337,23,,337,337',
'337,337,23,,,,23,,,23,,,23,,23,,,,,,,,,,,23,23,,,,,,,,,,,,,,,23,23,23',
'23,488,488,488,,23,,23,,,23,488,,23,23,23,23,488,,,,488,,,488,,,488',
',488,,,,,,,,,,,488,488,,,,,,,,,,,,,,,488,488,488,488,333,333,333,,488',
',488,,,488,333,,488,488,488,488,333,,,,333,,,333,,,333,,333,,,,,,,,',
',,333,333,,,,,,,,,,,,,,,333,333,333,333,332,332,332,,333,,333,,,333',
'332,,333,333,333,333,332,,,,332,,,332,,,332,,332,,,,,,,,,,,332,332,',
',,,,,,,,,,,,,332,332,332,332,138,138,138,,332,,332,,,332,138,,332,332',
'332,332,138,,,,138,,,138,,,138,,138,,,,,,,,,,,138,138,,,,,,,,,,,,,,',
'138,138,138,138,139,139,139,,138,,138,,,138,139,,138,138,138,138,139',
',,,139,,,139,,,139,,139,,,,,,,,,,,139,139,,,,,,,,,,,,,,,139,139,139',
'139,58,58,58,,139,,139,,,139,58,,139,139,139,139,58,,,,58,,,58,,,58',
',58,,,,,,,,,,,58,58,,,,,,,,,,,,,,,58,58,58,58,404,404,404,,58,,58,,',
'58,404,,58,58,58,58,404,,,,404,,,404,,,404,,404,,,,,,,,,,,404,404,,',
',,,,,,,,,,,,404,404,404,404,144,144,144,,404,,404,,,404,144,,404,404',
'404,404,144,,,,144,,,144,,,144,,144,,,,,,,,,,,144,144,,,,,,,,,,,,,,',
'144,144,144,144,145,145,145,,144,,144,,,144,145,,144,144,144,144,145',
',,,145,,,145,,,145,,145,,,,,,,,,,,145,145,,,,,,,,,,,,,,,145,145,145',
'145,146,146,146,,145,,145,,,145,146,,145,145,145,145,146,,,,146,,,146',
',,146,,146,,,,,,,,,,,146,146,,,,,,,,,,,,,,,146,146,146,146,147,147,147',
',146,,146,,,146,147,,146,146,146,146,147,,,,147,,,147,,,147,,147,,,',
',,,,,,,147,147,,,,,,,,,,,,,,,147,147,147,147,405,405,405,,147,,147,',
',147,405,,147,147,147,147,405,,,,405,,,405,,,405,,405,,,,,,,,,,,405',
'405,,,,,,,,,,,,,,,405,405,405,405,406,406,406,,405,,405,,,405,406,,405',
'405,405,405,406,,,,406,,,406,,,406,,406,,,,,,,,,,,406,406,,,,,,,,,,',
',,,,406,406,406,406,485,485,485,,406,,406,,,406,485,,406,406,406,406',
'485,,,,485,,,485,,,485,,485,,,,,,,,,,,485,485,,,,,,,,,,,,,,,485,485',
'485,485,407,407,407,,485,,485,,,485,407,,485,485,485,485,407,,,,407',
',,407,,,407,,407,,,,,,,,,,,407,407,,,,,,,,,,,,,,,407,407,407,407,408',
'408,408,,407,,407,,,407,408,,407,407,407,407,408,,,,408,,,408,,,408',
',408,,,,,,,,,,,408,408,,,,,,,,,,,,,,,408,408,408,408,156,156,156,,408',
',408,,,408,156,,408,408,408,408,156,,,,156,,,156,,,156,,156,,,,,,,,',
',,156,156,,,,,,,,,,,,,,,156,156,156,156,157,157,157,,156,,156,,,156',
'157,,156,156,156,156,157,,,,157,,,157,,,157,,157,,,,,,,,,,,157,157,',
',,,,,,,,,,,,,157,157,157,157,161,161,161,,157,,157,,,157,161,,157,157',
'157,157,161,,,,161,,,161,,,161,,161,,,,,,,,,,,161,161,,,,,,,,,,,,,,',
'161,161,161,161,481,481,481,,161,,161,,,161,481,,161,161,161,161,481',
',,,481,,,481,,,481,,481,,,,,,,,,,,481,481,,,,,,,,,,,,,,,481,481,481',
'481,52,52,52,,481,,481,,,481,52,,481,481,481,481,52,,,,52,,,52,,,52',
',52,,,,,,,,,,,52,52,,,,,,,,,,,,,,,52,52,52,52,34,34,34,,52,,52,,,52',
'34,,52,52,52,52,34,,,,34,,,34,,,34,,34,,,,,,,,,,,34,34,,,,,,,,,,,,,',
',34,34,34,34,167,167,167,,34,,34,,,34,167,,34,34,34,34,167,,,,167,,',
'167,,,167,,167,,,,,,,,,,,167,167,,,,,,,,,,,,,,,167,167,167,167,168,168',
'168,,167,,167,,,167,168,,167,167,167,167,168,,,,168,,,168,,,168,,168',
',,,,,,,,,,168,168,,,,,,,,,,,,,,,168,168,168,168,169,169,169,,168,,168',
',,168,169,,168,168,168,168,169,,,,169,,,169,,,169,,169,,,,,,,,,,,169',
'169,,,,,,,,,,,,,,,169,169,169,169,170,170,170,,169,,169,,,169,170,,169',
'169,169,169,170,,,,170,,,170,,,170,,170,,,,,,,,,,,170,170,,,,,,,,,,',
',,,,170,170,170,170,172,172,172,,170,,170,,,170,172,,170,170,170,170',
'172,,,,172,,,172,,,172,,172,,,,,,,,,,,172,172,,,,,,,,,,,,,,,172,172',
'172,172,40,40,40,,172,,172,,,172,40,,172,172,172,172,40,,,,40,,,40,',
',40,,40,,,,,,,,,,,40,40,,,,,,,,,,,,,,,40,40,40,40,174,174,174,,40,,40',
',,40,174,,40,40,40,40,174,,,,174,,,174,,,174,,174,,,,,,,,,,,174,174',
',,,,,,,,,,,,,,174,174,174,174,176,176,176,,174,174,174,,,174,176,,174',
'174,174,174,176,,,,176,,,176,,,176,,176,,,,,,,,,,,176,176,,,,,,,,,,',
',,,,176,176,176,176,476,476,476,,176,,176,,,176,476,,176,176,176,176',
'476,,,,476,,,476,,,476,,476,,,,,,,,,,,476,476,,,,,,,,,,,,,,,476,476',
'476,476,425,425,425,,476,,476,,,476,425,,476,476,476,476,425,,,,425',
',,425,,,425,,425,,,,,,,,,,,425,425,,,,,,,,,,,,,,,425,425,425,425,272',
'272,272,,425,,425,,,425,272,,425,425,425,425,272,,,,272,,,272,,,272',
',272,,,,,,,,,,,272,272,,,,,,,,,,,,,,,272,272,272,272,181,181,181,,272',
',272,,,272,181,,272,272,272,272,181,,,,181,,,181,,,181,,181,,,,,,,,',
',,181,181,,,,,,,,,,,,,,,181,181,181,181,,255,255,255,181,,181,,,181',
'181,255,181,181,181,181,,255,,,,255,,,255,,,255,,255,,,,,,,,,,,255,255',
',,,,,,,,,,,,,,255,255,255,255,183,183,183,,255,,255,,,255,183,,255,255',
'255,255,183,,,,183,,,183,,,183,,183,,,,,,,,,,,183,183,,,,,,,,,,,,,,',
'183,183,183,183,184,184,184,,183,,183,,,183,184,,183,183,183,183,184',
',,,184,,,184,,,184,,184,,,,,,,,,,,184,184,,,,,,,,,,,,,,,184,184,184',
'184,185,185,185,,184,,184,,,184,185,,184,184,184,184,185,,,,185,,,185',
',,185,,185,,,,,,,,,,,185,185,,,,,,,,,,,,,,,185,185,185,185,186,186,186',
',185,,185,,,185,186,,185,185,185,185,186,,,,186,,,186,,,186,,186,,,',
',,,,,,,186,186,,,,,,,,,,,,,,,186,186,186,186,187,187,187,,186,,186,',
',186,187,,186,186,186,186,187,,,,187,,,187,,,187,,187,,,,,,,,,,,187',
'187,,,,,,,,,,,,,,,187,187,187,187,188,188,188,,187,,187,,,187,188,,187',
'187,187,187,188,,,,188,,,188,,,188,,188,,,,,,,,,,,188,188,,,,,,,,,,',
',,,,188,188,188,188,189,189,189,,188,,188,,,188,189,,188,188,188,188',
'189,,,,189,,,189,,,189,,189,,,,,,,,,,,189,189,,,,,,,,,,,,,,,189,189',
'189,189,190,190,190,,189,,189,,,189,190,,189,189,189,189,190,,,,190',
',,190,,,190,,190,,,,,,,,,,,190,190,,,,,,,,,,,,,,,190,190,190,190,192',
'192,192,,190,,190,,,190,192,,190,190,190,190,192,,,,192,,,192,,,192',
',192,,,,,,,,,,,192,192,,,,,,,,,,,,,,,192,192,192,192,254,254,254,,192',
',192,,,192,254,,192,192,192,192,254,,,,254,,,254,,,254,,254,,,,,,,,',
',,254,254,,,,,,,,,,,,,,,254,254,254,254,196,196,196,,254,,254,,,254',
'196,,254,254,254,254,196,,,,196,,,196,,,196,196,196,,,,,,,,,,,196,196',
',,,,,,,,,,,,,,196,196,196,196,198,198,198,,196,,196,,,196,198,,196,196',
'196,196,198,,,,198,,,198,,,198,,198,,,,,,,,,,,198,198,,,,,,,,,,,,,,',
'198,198,198,198,242,242,242,,198,,198,,,198,242,,198,198,198,198,242',
',,,242,,,242,,,242,,242,,,,,,,,,,,242,242,,,,,,,,,,,,,,,242,242,242',
'242,200,200,200,,242,,242,,,242,200,,242,242,242,242,200,,,,200,,,200',
',,200,,200,,,,,,,,,,,200,200,,,,,,,,,,,,,,,200,200,200,200,201,201,201',
',200,,200,,,200,201,,200,200,200,200,201,,,,201,,,201,,,201,,201,,,',
',,,,,,,201,201,,,,,,,,,,,,,,,201,201,201,201,456,456,456,,201,,201,',
',201,456,,201,201,201,201,456,,,,456,,,456,,,456,,456,,,,,,,,,,,456',
'456,,,,,,,,,,,,,,,456,456,456,456,253,253,253,,456,,456,,,456,253,,456',
'456,456,456,253,,,,253,,,253,,,253,,253,,,,,,,,,,,253,253,,,,,,,,,,',
',,,,253,253,253,253,252,252,252,,253,,253,,,253,252,,253,253,253,253',
'252,,,,252,,,252,,,252,,252,,,,,,,,,,,252,252,,,,,,,,,,,,,,,252,252',
'252,252,455,455,455,,252,,252,,,252,455,,252,252,252,252,455,,,,455',
',,455,,,455,,455,,,,,,,,,,,455,455,,,,,,,,,,,,,,,455,455,455,455,453',
'453,453,,455,,455,,,455,453,,455,455,455,455,453,,,,453,,,453,,,453',
',453,,,,,,,,,,,453,453,,,,,,,,,,,,,,,453,453,453,453,250,250,250,,453',
',453,,,453,250,,453,453,453,453,250,,,,250,,,250,,,250,,250,,,,,,,,',
',,250,250,,,,,,,,,,,,,,,250,250,250,250,248,248,248,,250,,250,,,250',
'248,,250,250,250,250,248,,,,248,,,248,,,248,,248,,,,,,,,,,,248,248,',
',,,,,,,,,,,,,248,248,248,248,216,216,216,,248,,248,,,248,216,,248,248',
'248,248,216,,,,216,,,216,,,216,,216,,,,,,,,,,,216,216,,,,,,,,,,,,,,',
'216,216,216,216,247,247,247,,216,,216,,,216,247,,216,216,216,216,247',
',,,247,,,247,,,247,,247,,,,,,,,,,,247,247,,,,,,,,,,,,,,,247,247,247',
'247,246,246,246,,247,,247,,,247,246,,247,247,247,247,246,,,,246,,,246',
',,246,,246,,,,,,,,,,,246,246,,,,,,,,,,,,,,,246,246,246,246,245,245,245',
',246,,246,,,246,245,,246,246,246,246,245,,,,245,,,245,,,245,,245,,,',
',,,,,,,245,245,,,,,,,,,,,,,,,245,245,245,245,220,220,220,,245,,245,',
',245,220,,245,245,245,245,220,,,,220,,,220,,,220,,220,,,,,,,,,,,220',
'220,,,,,,,,,,,,,,,220,220,220,220,244,244,244,,220,,220,,,220,244,,220',
'220,220,220,244,,,,244,,,244,,,244,,244,,,,,,,,,,,244,244,,,,,,,,,,',
',,,,244,244,244,244,243,243,243,,244,,244,,,244,243,,244,244,244,244',
'243,,,,243,,,243,,,243,,243,,,,,,,,,,,243,243,,,,,,,,,,,,,,,243,243',
'243,243,228,228,228,,243,,243,,,243,228,,243,243,243,243,228,,,,228',
',,228,,,228,,228,,,,,,,,,,,228,228,,,,,,,,,,,,,,,228,228,228,228,229',
'229,229,,228,,228,,,228,229,,228,228,228,228,229,,,,229,,,229,,,229',
',229,,,,,,,,,,,229,229,,,,,,,,,,,,,,,229,229,229,229,230,230,230,,229',
',229,,,229,230,,229,229,229,229,230,,,,230,,,230,,,230,,230,,,,,,,,',
',,230,230,,,,,,,,,,,,,,,230,230,230,230,231,231,231,,230,,230,,,230',
'231,,230,230,230,230,231,,,,231,,,231,,,231,,231,,,,,,,,,,,231,231,',
',,,,,,,,,,,,,231,231,231,231,232,232,232,,231,,231,,,231,232,,231,231',
'231,231,232,,,,232,,,232,,,232,,232,,,,,,,,,,,232,232,,,,,,,,,,,,,,',
'232,232,232,232,233,233,233,,232,,232,,,232,233,,232,232,232,232,233',
',,,233,,,233,,,233,,233,,,,,,,,,,,233,233,,,,,,,,,,,,,,,233,233,233',
'233,234,234,234,,233,,233,,,233,234,,233,233,233,233,234,,,,234,,,234',
',,234,,234,,,,,,,,,,,234,234,,,,,,,,,,,,,,,234,234,234,234,235,235,235',
',234,,234,,,234,235,,234,234,234,234,235,,,,235,,,235,,,235,,235,,,',
',,,,,,,235,235,,,,,,,,,,,,,,,235,235,235,235,236,236,236,,235,,235,',
',235,236,,235,235,235,235,236,,,,236,,,236,,,236,,236,,,,,,,,,,,236',
'236,,,,,,,,,,,,,,,236,236,236,236,237,237,237,,236,,236,,,236,237,,236',
'236,236,236,237,,,,237,,,237,,,237,,237,,,,,,,,,,,237,237,,,,,,,,,,',
',,,,237,237,237,237,238,238,238,,237,,237,,,237,238,,237,237,237,237',
'238,,,,238,,,238,,,238,,238,,,,,,,,,,,238,238,,,,,,,,,,,,,,,238,238',
'238,238,239,239,239,,238,,238,,,238,239,,238,238,238,238,239,,,,239',
',,239,,,239,,239,,,,,,,,,,,239,239,,,,,,,,,,,,,,,239,239,239,239,240',
'240,240,,239,,239,,,239,240,,239,239,239,239,240,,,,240,,,240,,,240',
',240,,,,,,,,,,,240,240,,,,,,,,,,,,,,,240,240,240,240,241,241,241,,240',
',240,,,240,241,,240,240,240,240,241,,,,241,,,241,,,241,,241,,,,,,,,',
',,241,241,,,,,,,,,,,,,,,241,241,241,241,199,199,199,,241,,241,,,241',
'199,,241,241,241,241,199,,,,199,,,199,,,199,,199,21,21,21,,,,,,,,199',
'199,,,,,21,84,84,84,21,,,21,,,199,199,199,199,,,,84,199,,199,84,,199',
'84,,199,199,199,199,,,,,,,,,,21,21,21,21,,,,,21,,21,,,21,,,,84,84,84',
'84,,,,,84,,84,,,84' ]
racc_action_check = arr = Array.new(8528, nil)
str = a = i = nil
idx = 0
clist.each do |str|
  str.split(',', -1).each do |i|
    arr[idx] = i.to_i unless i.empty?
    idx += 1
  end
end

racc_action_pointer = [
  1386,   760,  2096,   nil,   nil,   nil,   547,   735,   nil,   nil,
   nil,    -1,   nil,   nil,   nil,   nil,  2450,   nil,   748,   nil,
   nil,  8440,    94,  3749,   nil,   nil,   687,   nil,   691,    13,
   nil,   nil,   nil,   nil,  5047,   601,   638,   nil,   636,   637,
  5401,   nil,     7,    54,  3159,   nil,     6,   148,   491,   nil,
  1234,   nil,  4988,   nil,   369,   700,   nil,   145,  4103,   701,
  1766,   nil,   742,   823,   -27,   nil,   nil,    27,  1158,   nil,
   nil,   -16,  2214,   nil,   753,  2332,   332,   nil,   nil,   755,
  2509,   nil,  2568,   352,  8457,   -34,   nil,    39,   nil,   nil,
   nil,   nil,   nil,   nil,   -37,   nil,    85,   nil,   nil,   nil,
   nil,   nil,   nil,  2982,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,  3041,   nil,  3100,   nil,   nil,  1842,   -19,   nil,
   716,   160,   471,   nil,   nil,   nil,   186,   701,    47,   nil,
   739,   183,   689,     0,   -23,   497,   nil,   nil,  3985,  4044,
   nil,     1,   nil,     2,  4221,  4280,  4339,  4398,    13,     3,
   678,   nil,    72,   nil,     4,   nil,  4752,  4811,   nil,   nil,
   nil,  4870,   671,     5,   nil,   687,   nil,  5106,  5165,  5224,
  5283,   nil,  5342,   693,  5460,   nil,  5519,   721,   469,   673,
   nil,  5755,   709,  5874,  5933,  5992,  6051,  6110,  6169,  6228,
  6287,   nil,  6346,   nil,   632,   nil,  6464,   nil,  6523,  8411,
  6641,  6700,   617,   nil,    49,   nil,   nil,    67,   nil,   nil,
   nil,   617,   601,   442,    -1,   nil,  7172,   586,   567,    80,
  7408,   nil,   567,   nil,   198,   nil,   nil,   nil,  7585,  7644,
  7703,  7762,  7821,  7880,  7939,  7998,  8057,  8116,  8175,  8234,
  8293,  8352,  6582,  7526,  7467,  7349,  7290,  7231,  7113,   nil,
  7054,   nil,  6877,  6818,  6405,  5815,   540,   233,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   533,   547,   525,   nil,   527,
   nil,   nil,  5696,   nil,   nil,   nil,   598,   592,   502,   nil,
   nil,   496,   nil,   nil,   220,   269,   421,   401,    34,   nil,
   nil,   nil,   400,   395,   762,   477,   nil,   nil,   nil,   nil,
   nil,   440,   374,   616,   705,   695,   568,   445,   409,   149,
   nil,   293,   -11,   348,   nil,   nil,   291,   300,   268,   256,
   226,   210,   207,   144,   -28,    40,   105,   110,   353,    63,
  1082,   nil,  3926,  3867,   nil,   -41,   119,  3690,   474,   nil,
    96,   104,   366,   nil,   145,   nil,    76,   345,   331,   296,
   nil,   464,   485,   492,   521,   540,   561,    31,   277,    64,
   280,   201,   -14,   nil,   nil,   nil,   342,   nil,    26,   -12,
   610,   639,   -35,   nil,   691,   nil,   nil,   nil,   930,   nil,
   nil,  2923,   854,  2864,  2804,  2745,   nil,  2686,  2627,  2391,
  2273,  2155,  2037,  1978,  3218,  3336,  3395,  3454,  3513,  3572,
  3631,   -54,   nil,   -10,  4162,  4457,  4516,  4634,  4693,   256,
    44,   348,   nil,   nil,   nil,   nil,   153,   nil,   nil,   332,
   319,   702,   393,   415,   nil,  5637,   508,   nil,   476,   nil,
   nil,   nil,   393,   nil,   nil,   nil,   395,   nil,   317,   486,
   619,   692,   702,   629,   597,   535,   532,   552,    96,   215,
   204,   128,   587,  6995,   646,  6936,  6759,   nil,   606,   274,
   654,   631,   626,   631,   170,   641,   214,   474,   656,   nil,
   673,   398,   nil,   nil,    15,   nil,  5578,    11,   687,    12,
   550,  4929,   nil,   672,   676,  4575,    94,   nil,  3808,   700,
   246,   nil,   322,   706,   706,   778,   nil,   716,   nil,   -14,
   728,   nil,   787,   778,   nil,   nil,   nil,   732,   nil,  3277,
   290,  1006,   nil,   nil,   745,   746,  1310,   nil,   748,   nil,
  1462,  1538,   753,   755,  1614,   758,  1690,   nil,   nil,   nil,
   758,   nil,   nil,   nil,   nil,   nil,   nil,  1918,   nil,   nil,
   nil ]

racc_action_default = [
    -1,  -294,  -294,    -8,  -217,   -28,   -86,  -169,    -9,   -26,
   -10,  -294,   -27,  -100,   -23,   -11,  -294,   -59,   -43,  -101,
   -24,  -294,  -294,  -294,   -42,   -25,  -175,   -12,  -294,  -294,
  -106,   -13,   -40,   -14,  -294,  -113,  -181,   -15,  -294,  -294,
  -294,   -16,  -294,  -120,  -294,   -17,  -294,  -187,  -294,   -18,
    -1,  -238,  -294,   -19,  -137,  -294,   -20,   -65,  -294,  -294,
  -294,   -21,   -50,  -294,  -193,   -22,   -81,  -154,    -2,    -3,
   -41,   -82,  -294,    -5,  -294,  -294,  -163,    -6,  -199,  -294,
  -294,    -7,  -294,   -83,  -294,  -294,   -98,   -63,   -55,   -99,
   -97,   -43,   -79,   -54,  -294,   -36,   -80,  -210,  -211,  -202,
  -203,  -204,  -205,  -294,  -206,  -207,  -208,   -87,  -209,  -201,
   -88,  -212,  -294,  -240,  -294,  -239,   -92,  -294,   -63,   -66,
  -171,  -124,   -83,  -264,  -195,  -213,  -144,  -177,  -159,  -102,
  -183,  -110,  -165,  -294,  -189,  -116,  -263,   -93,  -294,  -294,
  -260,  -294,  -259,  -294,  -294,  -294,  -294,  -294,  -294,  -294,
  -234,  -232,  -294,  -256,  -294,  -255,  -294,  -294,   -91,  -284,
  -283,  -294,  -226,  -294,  -222,  -294,   -90,  -294,  -294,  -294,
  -294,   -71,  -294,  -294,  -294,   -89,  -294,  -294,  -294,   -51,
   -52,  -294,  -294,  -294,  -294,  -294,  -294,  -294,  -294,  -294,
  -294,    -4,  -294,   -72,  -294,   -94,  -253,   -95,  -294,  -294,
  -294,  -294,  -294,   -96,  -294,   -84,   -85,   -63,   -64,   -34,
   -37,  -294,  -294,  -294,  -294,   -67,  -294,  -294,  -294,  -294,
  -294,   -68,  -294,  -200,  -164,  -218,  -277,   -62,  -294,  -294,
  -294,  -294,  -294,  -294,  -294,  -294,  -294,  -294,  -294,  -294,
  -294,  -294,  -294,  -294,  -294,  -294,  -294,  -294,  -294,  -266,
  -294,  -265,  -294,  -294,  -294,  -294,  -170,  -294,  -262,  -261,
  -279,  -278,  -107,  -108,  -109,  -176,  -294,  -294,  -231,  -294,
  -230,  -235,  -294,   -44,  -258,  -257,  -114,  -115,  -182,  -227,
  -221,  -294,  -220,  -219,  -122,  -123,  -121,  -294,  -294,   -61,
   -75,   -77,  -294,  -294,  -294,   -50,   -46,   -53,   -48,   -45,
   541,  -188,  -294,  -138,  -140,  -139,  -141,  -143,  -142,  -294,
   -74,  -131,   -83,  -173,  -197,  -215,  -149,  -179,  -294,  -161,
  -294,  -254,  -185,  -167,  -191,  -155,  -156,  -157,  -158,  -294,
  -294,   -58,  -294,  -294,   -38,  -294,  -294,  -294,  -294,   -57,
  -294,  -294,  -294,  -291,  -294,   -70,  -166,  -118,  -119,  -117,
  -196,  -125,  -127,  -126,  -128,  -130,  -129,  -172,  -145,  -146,
  -147,  -148,  -178,  -103,  -104,  -105,  -160,  -214,  -184,  -294,
  -111,  -112,  -294,  -280,  -294,  -233,  -236,  -223,  -294,   -60,
   -76,  -294,  -294,  -294,  -294,  -294,   -73,  -294,  -294,  -294,
  -294,  -294,  -294,  -294,  -294,  -294,  -251,  -294,  -294,  -294,
  -294,  -294,  -224,  -228,  -294,  -294,  -294,  -294,  -294,  -294,
  -294,  -241,   -31,   -30,   -35,   -39,  -294,   -29,   -56,  -294,
  -294,    -1,  -294,  -294,   -69,  -294,  -271,  -268,  -294,  -245,
   -78,  -267,  -294,   -49,   -47,  -194,   -83,  -198,  -294,  -168,
  -132,  -134,  -133,  -135,  -136,  -174,  -294,  -252,  -150,  -151,
  -152,  -153,  -294,  -251,  -229,  -294,  -294,  -216,  -180,  -162,
  -186,  -294,    -1,  -294,  -294,  -294,  -294,    -1,  -294,  -293,
  -294,    -1,  -292,  -190,  -272,  -273,  -294,  -294,  -294,  -294,
  -294,  -251,  -225,  -228,  -294,  -294,  -294,  -237,  -294,  -294,
    -1,  -242,    -1,  -294,  -294,    -1,  -287,  -294,  -274,  -294,
  -294,  -269,  -271,  -281,  -244,  -243,  -248,  -294,  -229,  -251,
  -294,  -294,  -192,  -285,  -294,  -294,    -1,  -289,  -294,  -288,
    -1,    -1,  -294,  -294,  -294,  -294,  -294,  -249,  -286,   -32,
  -294,  -290,  -275,  -276,  -270,  -282,  -246,  -294,  -250,   -33,
  -247 ]

racc_goto_table = [
    17,   148,    63,   164,   209,   223,   224,   402,   315,   122,
   181,   151,   342,   103,    19,   446,   225,   276,   277,   133,
   265,   122,   278,   256,   454,   119,   171,   122,   301,   271,
   477,   143,   459,   458,   321,   118,   163,   152,   445,   401,
   193,   279,   439,   303,   304,   305,   306,   307,   308,   460,
    17,   292,   165,   149,   311,   178,   215,   284,   285,   286,
    17,   470,   318,   213,    19,   221,   427,   191,    17,   122,
   502,   498,   484,   nil,    19,   nil,   291,   nil,   nil,   204,
   177,   nil,    19,   298,   nil,   nil,   302,   227,   208,   nil,
   122,   351,   352,   353,   354,   355,   356,   368,   207,   nil,
   507,   122,   489,   nil,   508,   362,   522,   494,   nil,   nil,
   nil,   497,   357,   346,   nil,   370,   371,    17,   nil,   347,
   348,   349,   410,   nil,   nil,   nil,   122,   nil,   525,   232,
   514,    19,   515,   420,   350,   518,   257,   226,   nil,   482,
   nil,   nil,   366,   325,   326,   327,   328,   448,   449,   450,
   451,   nil,   367,   nil,   nil,   369,   530,   122,   nil,   122,
   nil,   122,   nil,   122,   nil,   nil,   nil,   287,   122,   288,
   nil,   122,   nil,   293,   376,   nil,   331,   nil,   nil,   122,
   nil,   nil,   nil,   312,   nil,   358,   359,   360,   361,   309,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   437,
   nil,   nil,   nil,   122,   nil,   nil,   nil,   122,   nil,   466,
   nil,   nil,   nil,   338,   nil,   nil,   457,   344,   nil,   122,
   461,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   373,
   nil,   nil,   nil,   nil,   412,   413,   377,   122,   nil,   417,
   122,   375,   nil,   384,   nil,   311,   nil,   311,   440,   441,
   442,   443,   444,   311,   414,   311,   311,   311,   311,   122,
   nil,   nil,   311,   311,   311,   311,   311,   nil,   487,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   430,    90,   nil,   433,   435,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   116,   nil,
   512,   nil,   nil,   nil,   nil,   137,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   311,   nil,   nil,   nil,   nil,   122,
   122,   nil,   nil,   nil,   122,   nil,   158,   473,   nil,   nil,
    17,   nil,   nil,   nil,   166,   nil,   nil,   nil,   nil,   nil,
   175,   nil,   nil,   nil,    19,   nil,   311,   nil,   nil,   nil,
   411,   nil,   nil,   nil,   195,   nil,   nil,   197,   nil,   nil,
   nil,   nil,   203,   nil,   nil,   nil,   nil,   nil,   122,   nil,
   122,   122,   122,   nil,   436,   122,   nil,   nil,    17,   nil,
   432,   nil,    17,   122,   nil,   438,   nil,   nil,   nil,   nil,
   nil,   436,    19,   nil,   nil,   436,    19,   nil,   429,   nil,
   nil,   nil,   431,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   122,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    17,   nil,   nil,   nil,   nil,   262,   263,   264,   nil,
   nil,   nil,   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,
   122,   503,   122,   436,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   486,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    17,   122,    17,   nil,   nil,    17,   122,   nil,
   nil,    17,   122,   499,   nil,   436,    19,   nil,    19,   nil,
    17,    19,   510,   nil,   491,    19,   535,   nil,   nil,   nil,
    17,   nil,    17,   nil,    19,    17,   122,   nil,   nil,   nil,
   506,   nil,   nil,   nil,    19,   nil,    19,   nil,   nil,    19,
   nil,    17,   nil,   nil,   nil,   nil,    17,   nil,   nil,   nil,
    17,    17,   532,   533,    17,    19,    17,   363,   364,   365,
    19,   527,   nil,   nil,    19,    19,   nil,    17,    19,   nil,
    19,   nil,   nil,   nil,   536,   nil,   538,   nil,   nil,   nil,
   nil,    19,   nil,   nil,   nil,   nil,   nil,   540 ]

racc_goto_check = [
    29,     6,     1,    87,    23,    24,    60,    89,    80,    44,
    32,    93,    26,    82,    48,    95,    24,    51,    51,    31,
    66,    44,    69,    63,    91,    39,    37,    44,    72,    90,
    97,    31,    61,    70,    84,    35,    86,    31,    67,    88,
    37,    90,    64,    55,    55,    55,    55,    55,    55,    73,
    29,    43,     1,    92,    55,    33,    37,    53,    53,    53,
    29,    25,    94,    27,    48,    37,    96,     3,    29,    44,
    98,   100,    95,   nil,    48,   nil,    24,   nil,   nil,    31,
     5,   nil,    48,    24,   nil,   nil,    24,    37,    39,   nil,
    44,    55,    55,    55,    55,    55,    55,    72,    35,   nil,
    95,    44,    25,   nil,    91,    69,    97,    25,   nil,   nil,
   nil,    25,    66,    63,   nil,    51,    51,    29,   nil,    53,
    53,    53,    26,   nil,   nil,   nil,    44,   nil,    95,    82,
    25,    48,    25,    26,    24,    25,    31,     5,   nil,    89,
   nil,   nil,    60,    57,    57,    57,    57,    58,    58,    58,
    58,   nil,    24,   nil,   nil,    24,    25,    44,   nil,    44,
   nil,    44,   nil,    44,   nil,   nil,   nil,    31,    44,    31,
   nil,    44,   nil,    31,    24,   nil,    37,   nil,   nil,    44,
   nil,   nil,   nil,    44,   nil,    57,    57,    57,    57,    31,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    80,
   nil,   nil,   nil,    44,   nil,   nil,   nil,    44,   nil,    26,
   nil,   nil,   nil,    31,   nil,   nil,    80,    31,   nil,    44,
    80,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,
   nil,   nil,   nil,   nil,    24,    24,    87,    44,   nil,    24,
    44,    93,   nil,    32,   nil,    55,   nil,    55,    55,    55,
    55,    55,    55,    55,    23,    55,    55,    55,    55,    44,
   nil,   nil,    55,    55,    55,    55,    55,   nil,    80,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    24,    49,   nil,    24,    24,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    49,   nil,
    80,   nil,   nil,   nil,   nil,    49,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    55,   nil,   nil,   nil,   nil,    44,
    44,   nil,   nil,   nil,    44,   nil,    49,    24,   nil,   nil,
    29,   nil,   nil,   nil,    49,   nil,   nil,   nil,   nil,   nil,
    49,   nil,   nil,   nil,    48,   nil,    55,   nil,   nil,   nil,
     5,   nil,   nil,   nil,    49,   nil,   nil,    49,   nil,   nil,
   nil,   nil,    49,   nil,   nil,   nil,   nil,   nil,    44,   nil,
    44,    44,    44,   nil,    44,    44,   nil,   nil,    29,   nil,
    31,   nil,    29,    44,   nil,    31,   nil,   nil,   nil,   nil,
   nil,    44,    48,   nil,   nil,    44,    48,   nil,     5,   nil,
   nil,   nil,     5,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    44,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    29,   nil,   nil,   nil,   nil,    49,    49,    49,   nil,
   nil,   nil,   nil,   nil,   nil,    48,   nil,   nil,   nil,   nil,
    44,     6,    44,    44,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    31,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    29,    44,    29,   nil,   nil,    29,    44,   nil,
   nil,    29,    44,    31,   nil,    44,    48,   nil,    48,   nil,
    29,    48,    31,   nil,     5,    48,     6,   nil,   nil,   nil,
    29,   nil,    29,   nil,    48,    29,    44,   nil,   nil,   nil,
     5,   nil,   nil,   nil,    48,   nil,    48,   nil,   nil,    48,
   nil,    29,   nil,   nil,   nil,   nil,    29,   nil,   nil,   nil,
    29,    29,     1,     1,    29,    48,    29,    49,    49,    49,
    48,     5,   nil,   nil,    48,    48,   nil,    29,    48,   nil,
    48,   nil,   nil,   nil,     5,   nil,     5,   nil,   nil,   nil,
   nil,    48,   nil,   nil,   nil,   nil,   nil,     5 ]

racc_goto_pointer = [
   nil,     2,   nil,    -1,   nil,    20,   -37,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   -81,   -98,  -360,  -207,   -22,   nil,     0,
   nil,    -3,   -52,    -7,   nil,    14,   nil,   -31,   nil,     4,
   nil,   nil,   nil,  -123,   -13,   nil,   nil,   nil,    14,   282,
   nil,  -139,   nil,  -110,   nil,  -142,   nil,   -55,  -250,   nil,
  -106,  -374,   nil,  -115,  -347,   nil,  -127,  -357,   nil,  -139,
  -372,   nil,  -155,  -358,   nil,   nil,   nil,   nil,   nil,   nil,
  -188,   nil,     7,   nil,  -162,   nil,   -12,   -45,  -281,  -313,
  -121,  -379,    14,   -28,  -134,  -381,  -306,  -396,  -407,   nil,
  -403 ]

racc_goto_default = [
   nil,   469,    68,    69,    73,    77,    81,     3,     8,    10,
    15,    27,    31,    33,    37,    41,    45,    49,    53,    56,
    61,    65,    70,   nil,   125,   nil,   nil,   nil,    93,    95,
    24,   447,   nil,   nil,   179,    87,    88,   nil,    57,    92,
    66,    96,    71,   nil,    83,     6,    86,    13,    89,   129,
    30,   131,    35,   135,    43,   121,    54,   126,   316,    67,
   128,   319,    76,   132,   323,     7,   120,   313,    26,   127,
   317,    36,   130,   322,    47,   134,   324,    64,   124,   314,
   nil,    78,   387,     4,   nil,    11,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   474,
   475 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :NULL => 2,
 :TRUE => 3,
 :FALSE => 4,
 :BREAK => 5,
 :CASE => 6,
 :CATCH => 7,
 :CONST => 8,
 :CONTINUE => 9,
 :DEBUGGER => 10,
 :DEFAULT => 11,
 :DELETE => 12,
 :DO => 13,
 :ELSE => 14,
 :ENUM => 15,
 :FINALLY => 16,
 :FOR => 17,
 :FUNCTION => 18,
 :IF => 19,
 :IN => 20,
 :INSTANCEOF => 21,
 :NEW => 22,
 :RETURN => 23,
 :SWITCH => 24,
 :THIS => 25,
 :THROW => 26,
 :TRY => 27,
 :TYPEOF => 28,
 :VAR => 29,
 :VOID => 30,
 :WHILE => 31,
 :WITH => 32,
 :EQEQ => 33,
 :NE => 34,
 :STREQ => 35,
 :STRNEQ => 36,
 :LE => 37,
 :GE => 38,
 :OR => 39,
 :AND => 40,
 :PLUSPLUS => 41,
 :MINUSMINUS => 42,
 :LSHIFT => 43,
 :RSHIFT => 44,
 :URSHIFT => 45,
 :PLUSEQUAL => 46,
 :MINUSEQUAL => 47,
 :MULTEQUAL => 48,
 :DIVEQUAL => 49,
 :LSHIFTEQUAL => 50,
 :RSHIFTEQUAL => 51,
 :URSHIFTEQUAL => 52,
 :ANDEQUAL => 53,
 :MODEQUAL => 54,
 :XOREQUAL => 55,
 :OREQUAL => 56,
 :REGEXP => 57,
 :NUMBER => 58,
 :STRING => 59,
 :IDENT => 60,
 :AUTOPLUSPLUS => 61,
 :AUTOMINUSMINUS => 62,
 :IF_WITHOUT_ELSE => 63,
 ":" => 64,
 "(" => 65,
 ")" => 66,
 "{" => 67,
 "}" => 68,
 "," => 69,
 "[" => 70,
 "]" => 71,
 "." => 72,
 "+" => 73,
 "-" => 74,
 "~" => 75,
 "!" => 76,
 "*" => 77,
 "/" => 78,
 "%" => 79,
 "<" => 80,
 ">" => 81,
 "&" => 82,
 "^" => 83,
 "|" => 84,
 "?" => 85,
 "=" => 86,
 ";" => 87 }

racc_use_result_var = true

racc_nt_base = 88

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'NULL',
'TRUE',
'FALSE',
'BREAK',
'CASE',
'CATCH',
'CONST',
'CONTINUE',
'DEBUGGER',
'DEFAULT',
'DELETE',
'DO',
'ELSE',
'ENUM',
'FINALLY',
'FOR',
'FUNCTION',
'IF',
'IN',
'INSTANCEOF',
'NEW',
'RETURN',
'SWITCH',
'THIS',
'THROW',
'TRY',
'TYPEOF',
'VAR',
'VOID',
'WHILE',
'WITH',
'EQEQ',
'NE',
'STREQ',
'STRNEQ',
'LE',
'GE',
'OR',
'AND',
'PLUSPLUS',
'MINUSMINUS',
'LSHIFT',
'RSHIFT',
'URSHIFT',
'PLUSEQUAL',
'MINUSEQUAL',
'MULTEQUAL',
'DIVEQUAL',
'LSHIFTEQUAL',
'RSHIFTEQUAL',
'URSHIFTEQUAL',
'ANDEQUAL',
'MODEQUAL',
'XOREQUAL',
'OREQUAL',
'REGEXP',
'NUMBER',
'STRING',
'IDENT',
'AUTOPLUSPLUS',
'AUTOMINUSMINUS',
'IF_WITHOUT_ELSE',
'":"',
'"("',
'")"',
'"{"',
'"}"',
'","',
'"["',
'"]"',
'"."',
'"+"',
'"-"',
'"~"',
'"!"',
'"*"',
'"/"',
'"%"',
'"<"',
'">"',
'"&"',
'"^"',
'"|"',
'"?"',
'"="',
'";"',
'$start',
'SourceElements',
'SourceElementList',
'SourceElement',
'FunctionDeclaration',
'Statement',
'Block',
'VariableStatement',
'ConstStatement',
'EmptyStatement',
'ExprStatement',
'IfStatement',
'IterationStatement',
'ContinueStatement',
'BreakStatement',
'ReturnStatement',
'WithStatement',
'SwitchStatement',
'LabelledStatement',
'ThrowStatement',
'TryStatement',
'DebuggerStatement',
'Literal',
'Property',
'AssignmentExpr',
'FunctionBody',
'FormalParameterList',
'PropertyList',
'PrimaryExpr',
'PrimaryExprNoBrace',
'ArrayLiteral',
'Expr',
'ElisionOpt',
'ElementList',
'Elision',
'MemberExpr',
'FunctionExpr',
'Arguments',
'MemberExprNoBF',
'NewExpr',
'NewExprNoBF',
'CallExpr',
'CallExprNoBF',
'ArgumentList',
'LeftHandSideExpr',
'LeftHandSideExprNoBF',
'PostfixExpr',
'PostfixExprNoBF',
'UnaryExprCommon',
'UnaryExpr',
'UnaryExprNoBF',
'MultiplicativeExpr',
'MultiplicativeExprNoBF',
'AdditiveExpr',
'AdditiveExprNoBF',
'ShiftExpr',
'ShiftExprNoBF',
'RelationalExpr',
'RelationalExprNoIn',
'RelationalExprNoBF',
'EqualityExpr',
'EqualityExprNoIn',
'EqualityExprNoBF',
'BitwiseANDExpr',
'BitwiseANDExprNoIn',
'BitwiseANDExprNoBF',
'BitwiseXORExpr',
'BitwiseXORExprNoIn',
'BitwiseXORExprNoBF',
'BitwiseORExpr',
'BitwiseORExprNoIn',
'BitwiseORExprNoBF',
'LogicalANDExpr',
'LogicalANDExprNoIn',
'LogicalANDExprNoBF',
'LogicalORExpr',
'LogicalORExprNoIn',
'LogicalORExprNoBF',
'ConditionalExpr',
'ConditionalExprNoIn',
'AssignmentExprNoIn',
'ConditionalExprNoBF',
'AssignmentOperator',
'AssignmentExprNoBF',
'ExprNoIn',
'ExprNoBF',
'VariableDeclarationList',
'VariableDeclaration',
'VariableDeclarationListNoIn',
'VariableDeclarationNoIn',
'Initializer',
'InitializerNoIn',
'ConstDeclarationList',
'ConstDeclaration',
'ExprNoInOpt',
'ExprOpt',
'CaseBlock',
'CaseClausesOpt',
'DefaultClause',
'CaseClauses',
'CaseClause']

Racc_debug_parser = true

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'lib/parser.y', 42
  def _reduce_1( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 43
  def _reduce_2( val, _values, result )
 result = combine(:SourceElements, flatten_unless_sexp(val) )
   result
  end
.,.,

 # reduce 3 omitted

module_eval <<'.,.,', 'lib/parser.y', 48
  def _reduce_4( val, _values, result )
 result = flatten_unless_sexp(val)
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

 # reduce 18 omitted

 # reduce 19 omitted

 # reduce 20 omitted

 # reduce 21 omitted

 # reduce 22 omitted

module_eval <<'.,.,', 'lib/parser.y', 76
  def _reduce_23( val, _values, result )
 result = s(:Null, val.first)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 77
  def _reduce_24( val, _values, result )
 result = s(:True, val.first)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 78
  def _reduce_25( val, _values, result )
 result = s(:False, val.first)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 79
  def _reduce_26( val, _values, result )
 result = s(:Number, val.first)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 80
  def _reduce_27( val, _values, result )
 result = s(:String, val.first)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 81
  def _reduce_28( val, _values, result )
 result = s(:Regexp, val.first)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 85
  def _reduce_29( val, _values, result )
 result = s(:Property, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 86
  def _reduce_30( val, _values, result )
 result = s(:Property, val.first, val.last)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 87
  def _reduce_31( val, _values, result )
 result = s(:Property, val.first, val.last)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 93
  def _reduce_32( val, _values, result )
      klass = property_class_for(val.first)
      raise ParseError, "expected keyword 'get' or 'set' but saw #{val.first}" unless klass
      result = s(klass, val[1], s(:FunctionExpr, nil, [], val[5]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 98
  def _reduce_33( val, _values, result )
      klass = property_class_for(val.first)
      raise ParseError, "expected keyword 'get' or 'set' but saw #{val.first}" unless klass
      result = s(klass, val[1], s(:FunctionExpr, nil, val[3], val[6]))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 101
  def _reduce_34( val, _values, result )
 result = val
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 102
  def _reduce_35( val, _values, result )
 result = flatten_unless_sexp([val.first, val.last])
   result
  end
.,.,

 # reduce 36 omitted

module_eval <<'.,.,', 'lib/parser.y', 107
  def _reduce_37( val, _values, result )
 result = s(:ObjectLiteral, nil)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 108
  def _reduce_38( val, _values, result )
 result = combine(:ObjectLiteral, val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 109
  def _reduce_39( val, _values, result )
 result = combine(:ObjectLiteral, val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 113
  def _reduce_40( val, _values, result )
 result = s(:This, val.first)
   result
  end
.,.,

 # reduce 41 omitted

 # reduce 42 omitted

module_eval <<'.,.,', 'lib/parser.y', 116
  def _reduce_43( val, _values, result )
 result = s(:Resolve, val.first)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 117
  def _reduce_44( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 121
  def _reduce_45( val, _values, result )
 result = combine(:Array, [nil] * val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 122
  def _reduce_46( val, _values, result )
 result = combine(:Array, val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 123
  def _reduce_47( val, _values, result )
 result = combine(:Array, val[1] + [nil] * val[3])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 130
  def _reduce_48( val, _values, result )
      result = [nil] * val[0] + [s(:Element, val[1])]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 133
  def _reduce_49( val, _values, result )
      result = flatten_unless_sexp([val[0], [nil] * val[2], s(:Element, val[3])])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 136
  def _reduce_50( val, _values, result )
 result = 0
   result
  end
.,.,

 # reduce 51 omitted

module_eval <<'.,.,', 'lib/parser.y', 141
  def _reduce_52( val, _values, result )
 result = 1
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 142
  def _reduce_53( val, _values, result )
 result = val.first + 1
   result
  end
.,.,

 # reduce 54 omitted

 # reduce 55 omitted

module_eval <<'.,.,', 'lib/parser.y', 148
  def _reduce_56( val, _values, result )
 result = s(:BracketAccessor, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 149
  def _reduce_57( val, _values, result )
 result = s(:DotAccessor, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 150
  def _reduce_58( val, _values, result )
 result = s(:NewExpr, val[1], val[2])
   result
  end
.,.,

 # reduce 59 omitted

module_eval <<'.,.,', 'lib/parser.y', 158
  def _reduce_60( val, _values, result )
      result = s(:BracketAccessor, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 158
  def _reduce_61( val, _values, result )
 result = s(:DotAccessor, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 159
  def _reduce_62( val, _values, result )
 result = s(:NewExpr, val[1], val[2])
   result
  end
.,.,

 # reduce 63 omitted

module_eval <<'.,.,', 'lib/parser.y', 164
  def _reduce_64( val, _values, result )
 result = s(:NewExpr, val[1], s(:Arguments, nil))
   result
  end
.,.,

 # reduce 65 omitted

module_eval <<'.,.,', 'lib/parser.y', 169
  def _reduce_66( val, _values, result )
 result = s(:NewExpr, val[1], s(:Arguments, nil))
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 173
  def _reduce_67( val, _values, result )
 result = s(:FunctionCall, val[0], val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 174
  def _reduce_68( val, _values, result )
 result = s(:FunctionCall, val[0], val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 175
  def _reduce_69( val, _values, result )
 result = s(:BracketAccessor, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 176
  def _reduce_70( val, _values, result )
 result = s(:DotAccessor, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 180
  def _reduce_71( val, _values, result )
 result = s(:FunctionCall, val[0], val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 181
  def _reduce_72( val, _values, result )
 result = s(:FunctionCall, val[0], val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 182
  def _reduce_73( val, _values, result )
 result = s(:BracketAccessor, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 183
  def _reduce_74( val, _values, result )
 result = s(:DotAccessor, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 187
  def _reduce_75( val, _values, result )
 result = s(:Arguments, nil)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 188
  def _reduce_76( val, _values, result )
 result = combine(:Arguments, val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 192
  def _reduce_77( val, _values, result )
 result = val
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 193
  def _reduce_78( val, _values, result )
 result = flatten_unless_sexp([val.first, val.last])
   result
  end
.,.,

 # reduce 79 omitted

 # reduce 80 omitted

 # reduce 81 omitted

 # reduce 82 omitted

 # reduce 83 omitted

module_eval <<'.,.,', 'lib/parser.y', 208
  def _reduce_84( val, _values, result )
 result = s(:Postfix, val[0], '++')
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 209
  def _reduce_85( val, _values, result )
 result = s(:Postfix, val[0], '--')
   result
  end
.,.,

 # reduce 86 omitted

module_eval <<'.,.,', 'lib/parser.y', 214
  def _reduce_87( val, _values, result )
 result = s(:Postfix, val[0], '++')
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 215
  def _reduce_88( val, _values, result )
 result = s(:Postfix, val[0], '--')
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 219
  def _reduce_89( val, _values, result )
 result = s(:Delete, val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 220
  def _reduce_90( val, _values, result )
 result = s(:Void, val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 221
  def _reduce_91( val, _values, result )
 result = s(:TypeOf, val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 222
  def _reduce_92( val, _values, result )
 result = s(:Prefix, val[1], '++')
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 225
  def _reduce_93( val, _values, result )
 result = s(:Prefix, val[1], '--')
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 228
  def _reduce_94( val, _values, result )
 result = s(:UnaryPlus, val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 229
  def _reduce_95( val, _values, result )
 result = s(:UnaryMinus, val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 230
  def _reduce_96( val, _values, result )
 result = s(:BitwiseNot, val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 231
  def _reduce_97( val, _values, result )
 result = s(:LogicalNot, val[1])
   result
  end
.,.,

 # reduce 98 omitted

 # reduce 99 omitted

 # reduce 100 omitted

 # reduce 101 omitted

 # reduce 102 omitted

module_eval <<'.,.,', 'lib/parser.y', 246
  def _reduce_103( val, _values, result )
 result = s(:Multiply, val[0],val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 247
  def _reduce_104( val, _values, result )
 result = s(:Divide, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 248
  def _reduce_105( val, _values, result )
 result = s(:Modulus, val[0], val[2])
   result
  end
.,.,

 # reduce 106 omitted

module_eval <<'.,.,', 'lib/parser.y', 253
  def _reduce_107( val, _values, result )
 result = s(:Multiply, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 254
  def _reduce_108( val, _values, result )
 result = s(:Divide, val[0],val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 255
  def _reduce_109( val, _values, result )
 result = s(:Modulus, val[0], val[2])
   result
  end
.,.,

 # reduce 110 omitted

module_eval <<'.,.,', 'lib/parser.y', 260
  def _reduce_111( val, _values, result )
 result = s(:Add, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 261
  def _reduce_112( val, _values, result )
 result = s(:Subtract, val[0], val[2])
   result
  end
.,.,

 # reduce 113 omitted

module_eval <<'.,.,', 'lib/parser.y', 266
  def _reduce_114( val, _values, result )
 result = s(:Add, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 267
  def _reduce_115( val, _values, result )
 result = s(:Subtract, val[0], val[2])
   result
  end
.,.,

 # reduce 116 omitted

module_eval <<'.,.,', 'lib/parser.y', 272
  def _reduce_117( val, _values, result )
 result = s(:LeftShift, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 273
  def _reduce_118( val, _values, result )
 result = s(:RightShift, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 274
  def _reduce_119( val, _values, result )
 result = s(:UnsignedRightShift, val[0], val[2])
   result
  end
.,.,

 # reduce 120 omitted

module_eval <<'.,.,', 'lib/parser.y', 279
  def _reduce_121( val, _values, result )
 result = s(:LeftShift, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 280
  def _reduce_122( val, _values, result )
 result = s(:RightShift, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 281
  def _reduce_123( val, _values, result )
 result = s(:UnsignedRightShift, val[0], val[2])
   result
  end
.,.,

 # reduce 124 omitted

module_eval <<'.,.,', 'lib/parser.y', 286
  def _reduce_125( val, _values, result )
 result = s(:Less, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 287
  def _reduce_126( val, _values, result )
 result = s(:Greater, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 288
  def _reduce_127( val, _values, result )
 result = s(:LessOrEqual, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 289
  def _reduce_128( val, _values, result )
 result = s(:GreaterOrEqual, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 290
  def _reduce_129( val, _values, result )
 result = s(:InstanceOf, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 291
  def _reduce_130( val, _values, result )
 result = s(:In, val[0], val[2])
   result
  end
.,.,

 # reduce 131 omitted

module_eval <<'.,.,', 'lib/parser.y', 296
  def _reduce_132( val, _values, result )
 result = s(:Less, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 297
  def _reduce_133( val, _values, result )
 result = s(:Greater, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 298
  def _reduce_134( val, _values, result )
 result = s(:LessOrEqual, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 299
  def _reduce_135( val, _values, result )
 result = s(:GreaterOrEqual, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 301
  def _reduce_136( val, _values, result )
 result = s(:InstanceOf, val[0], val[2])
   result
  end
.,.,

 # reduce 137 omitted

module_eval <<'.,.,', 'lib/parser.y', 306
  def _reduce_138( val, _values, result )
 result = s(:Less, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 307
  def _reduce_139( val, _values, result )
 result = s(:Greater, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 308
  def _reduce_140( val, _values, result )
 result = s(:LessOrEqual, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 309
  def _reduce_141( val, _values, result )
 result = s(:GreaterOrEqual, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 311
  def _reduce_142( val, _values, result )
 result = s(:InstanceOf, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 312
  def _reduce_143( val, _values, result )
 result = s(:In, val[0], val[2])
   result
  end
.,.,

 # reduce 144 omitted

module_eval <<'.,.,', 'lib/parser.y', 317
  def _reduce_145( val, _values, result )
 result = s(:Equal, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 318
  def _reduce_146( val, _values, result )
 result = s(:NotEqual, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 319
  def _reduce_147( val, _values, result )
 result = s(:StrictEqual, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 320
  def _reduce_148( val, _values, result )
 result = s(:NotStrictEqual, val[0], val[2])
   result
  end
.,.,

 # reduce 149 omitted

module_eval <<'.,.,', 'lib/parser.y', 326
  def _reduce_150( val, _values, result )
 result = s(:Equal, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 328
  def _reduce_151( val, _values, result )
 result = s(:NotEqual, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 330
  def _reduce_152( val, _values, result )
 result = s(:StrictEqual, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 332
  def _reduce_153( val, _values, result )
 result = s(:NotStrictEqual, val[0], val[2])
   result
  end
.,.,

 # reduce 154 omitted

module_eval <<'.,.,', 'lib/parser.y', 338
  def _reduce_155( val, _values, result )
 result = s(:Equal, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 339
  def _reduce_156( val, _values, result )
 result = s(:NotEqual, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 341
  def _reduce_157( val, _values, result )
 result = s(:StrictEqual, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 343
  def _reduce_158( val, _values, result )
 result = s(:NotStrictEqual, val[0], val[2])
   result
  end
.,.,

 # reduce 159 omitted

module_eval <<'.,.,', 'lib/parser.y', 348
  def _reduce_160( val, _values, result )
 result = s(:BitAnd, val[0], val[2])
   result
  end
.,.,

 # reduce 161 omitted

module_eval <<'.,.,', 'lib/parser.y', 354
  def _reduce_162( val, _values, result )
 result = s(:BitAnd, val[0], val[2])
   result
  end
.,.,

 # reduce 163 omitted

module_eval <<'.,.,', 'lib/parser.y', 359
  def _reduce_164( val, _values, result )
 result = s(:BitAnd, val[0], val[2])
   result
  end
.,.,

 # reduce 165 omitted

module_eval <<'.,.,', 'lib/parser.y', 364
  def _reduce_166( val, _values, result )
 result = s(:BitXOr, val[0], val[2])
   result
  end
.,.,

 # reduce 167 omitted

module_eval <<'.,.,', 'lib/parser.y', 370
  def _reduce_168( val, _values, result )
 result = s(:BitXOr, val[0], val[2])
   result
  end
.,.,

 # reduce 169 omitted

module_eval <<'.,.,', 'lib/parser.y', 376
  def _reduce_170( val, _values, result )
 result = s(:BitXOr, val[0], val[2])
   result
  end
.,.,

 # reduce 171 omitted

module_eval <<'.,.,', 'lib/parser.y', 381
  def _reduce_172( val, _values, result )
 result = s(:BitOr, val[0], val[2])
   result
  end
.,.,

 # reduce 173 omitted

module_eval <<'.,.,', 'lib/parser.y', 387
  def _reduce_174( val, _values, result )
 result = s(:BitOr, val[0], val[2])
   result
  end
.,.,

 # reduce 175 omitted

module_eval <<'.,.,', 'lib/parser.y', 393
  def _reduce_176( val, _values, result )
 result = s(:BitOr, val[0], val[2])
   result
  end
.,.,

 # reduce 177 omitted

module_eval <<'.,.,', 'lib/parser.y', 398
  def _reduce_178( val, _values, result )
 result = s(:LogicalAnd, val[0], val[2])
   result
  end
.,.,

 # reduce 179 omitted

module_eval <<'.,.,', 'lib/parser.y', 404
  def _reduce_180( val, _values, result )
 result = s(:LogicalAnd, val[0], val[2])
   result
  end
.,.,

 # reduce 181 omitted

module_eval <<'.,.,', 'lib/parser.y', 410
  def _reduce_182( val, _values, result )
 result = s(:LogicalAnd, val[0], val[2])
   result
  end
.,.,

 # reduce 183 omitted

module_eval <<'.,.,', 'lib/parser.y', 415
  def _reduce_184( val, _values, result )
 result = s(:LogicalOr, val[0], val[2])
   result
  end
.,.,

 # reduce 185 omitted

module_eval <<'.,.,', 'lib/parser.y', 421
  def _reduce_186( val, _values, result )
 result = s(:LogicalOr, val[0], val[2])
   result
  end
.,.,

 # reduce 187 omitted

module_eval <<'.,.,', 'lib/parser.y', 426
  def _reduce_188( val, _values, result )
 result = s(:LogicalOr, val[0], val[2])
   result
  end
.,.,

 # reduce 189 omitted

module_eval <<'.,.,', 'lib/parser.y', 434
  def _reduce_190( val, _values, result )
      result = s(:Conditional, val[0], val[2], val[4])
   result
  end
.,.,

 # reduce 191 omitted

module_eval <<'.,.,', 'lib/parser.y', 441
  def _reduce_192( val, _values, result )
      result = s(:Conditional, val[0], val[2], val[4])
   result
  end
.,.,

 # reduce 193 omitted

module_eval <<'.,.,', 'lib/parser.y', 448
  def _reduce_194( val, _values, result )
      result = s(:Conditional, val[0], val[2], val[4])
   result
  end
.,.,

 # reduce 195 omitted

module_eval <<'.,.,', 'lib/parser.y', 455
  def _reduce_196( val, _values, result )
      result = s(val[1], val.first, val.last)
   result
  end
.,.,

 # reduce 197 omitted

module_eval <<'.,.,', 'lib/parser.y', 462
  def _reduce_198( val, _values, result )
      result = s(val[1], val.first, val.last)
   result
  end
.,.,

 # reduce 199 omitted

module_eval <<'.,.,', 'lib/parser.y', 469
  def _reduce_200( val, _values, result )
      result = s(val[1], val.first, val.last)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 472
  def _reduce_201( val, _values, result )
 result = :OpEqual
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 473
  def _reduce_202( val, _values, result )
 result = :OpPlusEqual
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 474
  def _reduce_203( val, _values, result )
 result = :OpMinusEqual
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 475
  def _reduce_204( val, _values, result )
 result = :OpMultiplyEqual
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 476
  def _reduce_205( val, _values, result )
 result = :OpDivideEqual
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 477
  def _reduce_206( val, _values, result )
 result = :OpLShiftEqual
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 478
  def _reduce_207( val, _values, result )
 result = :OpRShiftEqual
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 479
  def _reduce_208( val, _values, result )
 result = :OpURShiftEqual
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 480
  def _reduce_209( val, _values, result )
 result = :OpAndEqual
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 481
  def _reduce_210( val, _values, result )
 result = :OpXOrEqual
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 482
  def _reduce_211( val, _values, result )
 result = :OpOrEqual
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 483
  def _reduce_212( val, _values, result )
 result = :OpModEqual
   result
  end
.,.,

 # reduce 213 omitted

module_eval <<'.,.,', 'lib/parser.y', 488
  def _reduce_214( val, _values, result )
 result = s(:Comma,val[0], val[2])
   result
  end
.,.,

 # reduce 215 omitted

module_eval <<'.,.,', 'lib/parser.y', 493
  def _reduce_216( val, _values, result )
 result = s(:Comma, val[0], val[2])
   result
  end
.,.,

 # reduce 217 omitted

module_eval <<'.,.,', 'lib/parser.y', 498
  def _reduce_218( val, _values, result )
 result = s(:Comma, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 507
  def _reduce_219( val, _values, result )
      result = s(:Block, val[1])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 514
  def _reduce_220( val, _values, result )
      result = combine(:VarStatement, val[1])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 519
  def _reduce_221( val, _values, result )
      result = combine(:VarStatement, val[1])
      debug(result)
      raise ParseError, "bad variable statement, #{val.to_s}" unless allow_auto_semi?(val.last)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 522
  def _reduce_222( val, _values, result )
 result = val
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 526
  def _reduce_223( val, _values, result )
      result = flatten_unless_sexp([val.first, val.last])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 529
  def _reduce_224( val, _values, result )
 result = val
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 533
  def _reduce_225( val, _values, result )
      result = flatten_unless_sexp([val.first, val.last])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 536
  def _reduce_226( val, _values, result )
 result = s(:VarDecl, val.first, nil)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 537
  def _reduce_227( val, _values, result )
 result = s(:VarDecl, val.first, val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 541
  def _reduce_228( val, _values, result )
 result = s(:VarDecl, val[0], nil)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 542
  def _reduce_229( val, _values, result )
 result = s(:VarDecl, val[0], val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 550
  def _reduce_230( val, _values, result )
      result = combine(:ConstStatement, val[1])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 555
  def _reduce_231( val, _values, result )
      result = combine(:ConstStatement, val[1])
      debug(result)
      raise ParseError, "bad const statement, #{val.to_s}" unless allow_auto_semi?(val.last)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 558
  def _reduce_232( val, _values, result )
 result = val
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 562
  def _reduce_233( val, _values, result )
      result = flatten_unless_sexp([val.first, val.last])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 565
  def _reduce_234( val, _values, result )
 result = s(:VarDecl, val[0], nil)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 566
  def _reduce_235( val, _values, result )
 result = s(:VarDecl, val[0], val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 570
  def _reduce_236( val, _values, result )
 result = s(:AssignExpr, val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 574
  def _reduce_237( val, _values, result )
 result = s(:AssignExpr, val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 578
  def _reduce_238( val, _values, result )
 result = s(:EmptyStatement, val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 586
  def _reduce_239( val, _values, result )
      result = s(:ExpressionStatement, val.first)
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 591
  def _reduce_240( val, _values, result )
      result = s(:ExpressionStatement, val.first)
      debug(result)
      raise ParseError, "bad expr statement, #{val.to_s}" unless allow_auto_semi?(val.last)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 598
  def _reduce_241( val, _values, result )
      result = s(:If, val[2], val[4])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 602
  def _reduce_242( val, _values, result )
      result = s(:If, val[2], val[4], val[6])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 609
  def _reduce_243( val, _values, result )
      result = s(:DoWhile, val[1], val[4])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 613
  def _reduce_244( val, _values, result )
      result = s(:DoWhile, val[1], val[4])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 617
  def _reduce_245( val, _values, result )
      result = s(:While, val[2], val[4])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 621
  def _reduce_246( val, _values, result )
      result = s(:For, val[2], val[4], val[6], val[8])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 626
  def _reduce_247( val, _values, result )
      result = s(:For, s(:VarStatement, val[3]), val[5], val[7], val[9])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 630
  def _reduce_248( val, _values, result )
      result = s(:ForIn, val[2], val[4], val[6])
      debug(result);
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 634
  def _reduce_249( val, _values, result )
      result = s(:ForIn, s(:VarDecl, val[3], nil), val[5], val[7])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 638
  def _reduce_250( val, _values, result )
      result = s(:ForIn, s(:VarDecl, val[3], val[4]), val[6], val[8])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 641
  def _reduce_251( val, _values, result )
 result = nil
   result
  end
.,.,

 # reduce 252 omitted

module_eval <<'.,.,', 'lib/parser.y', 646
  def _reduce_253( val, _values, result )
 result = nil
   result
  end
.,.,

 # reduce 254 omitted

module_eval <<'.,.,', 'lib/parser.y', 655
  def _reduce_255( val, _values, result )
      result = s(:Continue, nil)
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 660
  def _reduce_256( val, _values, result )
      result = s(:Continue, nil)
      debug(result)
      raise ParseError, "bad continue statement, #{val.to_s}" unless allow_auto_semi?(val.last)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 664
  def _reduce_257( val, _values, result )
      result = s(:Continue, val[1])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 669
  def _reduce_258( val, _values, result )
      result = s(:Continue, val[1])
      debug(result)
      raise ParseError, "bad continue statement, #{val.to_s}" unless allow_auto_semi?(val.last)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 676
  def _reduce_259( val, _values, result )
      result = s(:Break, nil)
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 681
  def _reduce_260( val, _values, result )
      result = s(:Break, nil)
      debug(result)
      raise ParseError, "bad break statement, #{val.to_s}" unless allow_auto_semi?(val.last)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 685
  def _reduce_261( val, _values, result )
      result = s(:Break, val[1])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 690
  def _reduce_262( val, _values, result )
      result = s(:Break, val[1])
      debug(result)
      raise ParseError, "bad break statement, #{val.to_s}" unless allow_auto_semi?(val.last)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 697
  def _reduce_263( val, _values, result )
      result = s(:Return, nil)
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 702
  def _reduce_264( val, _values, result )
      result = s(:Return, nil)
      debug(result)
      raise ParseError, "bad return statement, #{val.to_s}" unless allow_auto_semi?(val.last)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 706
  def _reduce_265( val, _values, result )
      result = s(:Return, val[1])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 711
  def _reduce_266( val, _values, result )
      result = s(:Return, val[1])
      debug(result)
      raise ParseError, "bad return statement, #{val.to_s}" unless allow_auto_semi?(val.last)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 718
  def _reduce_267( val, _values, result )
      result = s(:With, val[2], val[4])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 725
  def _reduce_268( val, _values, result )
      result = s(:Switch, val[2], val[4])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 728
  def _reduce_269( val, _values, result )
 result = combine(:CaseBlock, flatten_unless_sexp([val[1]]) )
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 729
  def _reduce_270( val, _values, result )
 result = combine(:CaseBlock, flatten_unless_sexp([val[1], val[2], val[3]]) )
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 733
  def _reduce_271( val, _values, result )
 result = nil
   result
  end
.,.,

 # reduce 272 omitted

module_eval <<'.,.,', 'lib/parser.y', 738
  def _reduce_273( val, _values, result )
 result = val
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 739
  def _reduce_274( val, _values, result )
 result = flatten_unless_sexp(val)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 744
  def _reduce_275( val, _values, result )
 result = s(:CaseClause, val[1], val[3] )
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 751
  def _reduce_276( val, _values, result )
      result = s(:CaseClause, nil, val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 754
  def _reduce_277( val, _values, result )
 result = s(:Label, val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 762
  def _reduce_278( val, _values, result )
      result = s(:Throw, val[1])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 767
  def _reduce_279( val, _values, result )
      result = s(:Throw, val[1])
      debug(result)
      raise ParseError, "bad throw statement, #{val.to_s}" unless allow_auto_semi?(val.last)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 774
  def _reduce_280( val, _values, result )
      result = s(:Try, val[1], nil, nil, val[3])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 778
  def _reduce_281( val, _values, result )
      result = s(:Try, val[1], val[4], val[6])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 782
  def _reduce_282( val, _values, result )
      result = s(:Try, val[1], val[4], val[6], val[8])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 789
  def _reduce_283( val, _values, result )
      result = s(:EmptyStatement, val[0])
      debug(result)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 794
  def _reduce_284( val, _values, result )
      result = s(:EmptyStatement, val[0])
      debug(result)
      raise ParseError, "bad debugger statement, #{val.to_s}" unless allow_auto_semi?(val.last)
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 801
  def _reduce_285( val, _values, result )
      result = s(:FunctionDecl, val[1], val[5])
      debug(val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 805
  def _reduce_286( val, _values, result )
      result = s(:FunctionDecl, val[1], val[6], val[3])
      debug(val[6])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 812
  def _reduce_287( val, _values, result )
      result = s(:FunctionExpr, val[0], [], val[4])
      debug(val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 816
  def _reduce_288( val, _values, result )
      result = s(:FunctionExpr, val[0], val[2], val[5])
      debug(val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 820
  def _reduce_289( val, _values, result )
      result = s(:FunctionExpr, val[1], [], val[5])
      debug(val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 824
  def _reduce_290( val, _values, result )
      result = s(:FunctionExpr, val[1], val[3], val[6])
      debug(val[6])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 827
  def _reduce_291( val, _values, result )
 result = [s(:Parameter,val[0])]
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 831
  def _reduce_292( val, _values, result )
      					  result = flatten_unless_sexp([val.first, s(:Parameter, val.last)])
   result
  end
.,.,

module_eval <<'.,.,', 'lib/parser.y', 834
  def _reduce_293( val, _values, result )
 result = s(:FunctionBody, val[0])
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class GeneratedParser

end   # module Js2Fbjs
